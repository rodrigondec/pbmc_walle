

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Sep  9 02:31:52 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  0002B6                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for _max_cicle
    24  0002B6  0014               	dw	20
    25                           
    26                           ;initializer for _off_duty
    27  0002B8  0001               	dw	1
    28  0000                     _INTCONbits	set	4082
    29  0000                     _PORTBbits	set	3969
    30  0000                     _PORTCbits	set	3970
    31  0000                     _T0CONbits	set	4053
    32  0000                     _LATD4	set	31844
    33  0000                     _RC7	set	31767
    34  0000                     _TRISB1	set	31897
    35  0000                     _TRISB2	set	31898
    36  0000                     _TRISB3	set	31899
    37  0000                     _TRISB4	set	31900
    38  0000                     _TRISC5	set	31909
    39  0000                     _TRISC7	set	31911
    40  0000                     _TRISD0	set	31912
    41  0000                     _TRISD1	set	31913
    42  0000                     _TRISD2	set	31914
    43  0000                     _TRISD3	set	31915
    44  0000                     _TRISD4	set	31916
    45  0000                     _TRISD5	set	31917
    46  0000                     _TRISD6	set	31918
    47  0000                     _TRISD7	set	31919
    48                           
    49                           ; #config settings
    50  0000                     
    51                           	psect	cinit
    52  000284                     __pcinit:
    53                           	opt stack 0
    54  000284                     start_initialization:
    55                           	opt stack 0
    56  000284                     __initialization:
    57                           	opt stack 0
    58                           
    59                           ; Initialize objects allocated to COMRAM (4 bytes)
    60                           ; load TBLPTR registers with __pidataCOMRAM
    61  000284  0EB6               	movlw	low __pidataCOMRAM
    62  000286  6EF6               	movwf	tblptrl,c
    63  000288  0E02               	movlw	high __pidataCOMRAM
    64  00028A  6EF7               	movwf	tblptrh,c
    65  00028C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    66  00028E  6EF8               	movwf	tblptru,c
    67  000290  EE00  F024         	lfsr	0,__pdataCOMRAM
    68  000294  EE10 F004          	lfsr	1,4
    69  000298                     copy_data0:
    70  000298  0009               	tblrd		*+
    71  00029A  CFF5 FFEE          	movff	tablat,postinc0
    72  00029E  50E5               	movf	postdec1,w,c
    73  0002A0  50E1               	movf	fsr1l,w,c
    74  0002A2  E1FA               	bnz	copy_data0
    75                           
    76                           ; Clear objects allocated to COMRAM (4 bytes)
    77  0002A4  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
    78  0002A6  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
    79  0002A8  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
    80  0002AA  6A20               	clrf	__pbssCOMRAM& (0+255),c
    81  0002AC                     end_of_initialization:
    82                           	opt stack 0
    83  0002AC                     __end_of__initialization:
    84                           	opt stack 0
    85  0002AC  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    86  0002AE  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    87  0002B0  0100               	movlb	0
    88  0002B2  EF67  F000         	goto	_main	;jump to C main() function
    89                           tblptru	equ	0xFF8
    90                           tblptrh	equ	0xFF7
    91                           tblptrl	equ	0xFF6
    92                           tablat	equ	0xFF5
    93                           postinc0	equ	0xFEE
    94                           postdec1	equ	0xFE5
    95                           fsr1l	equ	0xFE1
    96                           
    97                           	psect	bssCOMRAM
    98  000020                     __pbssCOMRAM:
    99                           	opt stack 0
   100  000020                     _count:
   101                           	opt stack 0
   102  000020                     	ds	2
   103  000022                     _velocidade:
   104                           	opt stack 0
   105  000022                     	ds	2
   106                           tblptru	equ	0xFF8
   107                           tblptrh	equ	0xFF7
   108                           tblptrl	equ	0xFF6
   109                           tablat	equ	0xFF5
   110                           postinc0	equ	0xFEE
   111                           postdec1	equ	0xFE5
   112                           fsr1l	equ	0xFE1
   113                           
   114                           	psect	dataCOMRAM
   115  000024                     __pdataCOMRAM:
   116                           	opt stack 0
   117  000024                     _max_cicle:
   118                           	opt stack 0
   119  000024                     	ds	2
   120  000026                     _off_duty:
   121                           	opt stack 0
   122  000026                     	ds	2
   123                           tblptru	equ	0xFF8
   124                           tblptrh	equ	0xFF7
   125                           tblptrl	equ	0xFF6
   126                           tablat	equ	0xFF5
   127                           postinc0	equ	0xFEE
   128                           postdec1	equ	0xFE5
   129                           fsr1l	equ	0xFE1
   130                           
   131                           	psect	cstackCOMRAM
   132  000001                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000001                     ?i2___awmod:
   135                           	opt stack 0
   136  000001                     i2___awmod@dividend:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140  000001                     	ds	2
   141  000003                     i2___awmod@divisor:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145  000003                     	ds	2
   146  000005                     i2___awmod@counter:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x4
   150  000005                     	ds	1
   151  000006                     i2___awmod@sign:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x5
   155  000006                     	ds	1
   156  000007                     ??_tc_int:
   157                           
   158                           ; 1 bytes @ 0x6
   159  000007                     	ds	14
   160  000015                     ?___awmod:
   161                           	opt stack 0
   162  000015                     delayX@n:
   163                           	opt stack 0
   164  000015                     ___awmod@dividend:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x14
   168  000015                     	ds	2
   169  000017                     ??_delayX:
   170  000017                     ___awmod@divisor:
   171                           	opt stack 0
   172                           
   173                           ; 2 bytes @ 0x16
   174  000017                     	ds	1
   175  000018                     delayX@i:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x17
   179  000018                     	ds	1
   180  000019                     ___awmod@counter:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x18
   184  000019                     	ds	1
   185  00001A                     ___awmod@sign:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x19
   189  00001A                     	ds	1
   190  00001B                     
   191                           ; 2 bytes @ 0x1A
   192  00001B                     	ds	2
   193  00001D                     
   194                           ; 3 bytes @ 0x1C
   195  00001D                     	ds	3
   196  000020                     tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           tblptrl	equ	0xFF6
   199                           tablat	equ	0xFF5
   200                           postinc0	equ	0xFEE
   201                           postdec1	equ	0xFE5
   202                           fsr1l	equ	0xFE1
   203                           
   204                           ; 1 bytes @ 0x1F
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 101 in file "/home/rodrigo/Documents/Prog/walle/main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;  argc            2   26[COMRAM] int 
   213 ;;  argv            3   28[COMRAM] PTR PTR unsigned char 
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  2   26[COMRAM] int 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0, cstack
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   225 ;;      Params:         5       0       0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0
   228 ;;      Totals:         5       0       0       0       0       0       0
   229 ;;Total ram usage:        5 bytes
   230 ;; Hardware stack levels required when called:    3
   231 ;; This function calls:
   232 ;;		___awmod
   233 ;;		_delayX
   234 ;; This function is called by:
   235 ;;		Startup code after reset
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text0
   240  0000CE                     __ptext0:
   241                           	opt stack 0
   242  0000CE                     _main:
   243                           	opt stack 28
   244                           
   245                           ;main.c: 104: T0CONbits.TMR0ON = 1;
   246                           
   247                           ;incstack = 0
   248  0000CE  8ED5               	bsf	4053,7,c	;volatile
   249                           
   250                           ;main.c: 105: T0CONbits.T0CS = 0;
   251  0000D0  9AD5               	bcf	4053,5,c	;volatile
   252                           
   253                           ;main.c: 106: T0CONbits.PSA = 0;
   254  0000D2  96D5               	bcf	4053,3,c	;volatile
   255                           
   256                           ;main.c: 108: T0CONbits.T0PS0 = 0;
   257  0000D4  90D5               	bcf	4053,0,c	;volatile
   258                           
   259                           ;main.c: 109: T0CONbits.T0PS1 = 0;
   260  0000D6  92D5               	bcf	4053,1,c	;volatile
   261                           
   262                           ;main.c: 110: T0CONbits.T0PS2 = 0;
   263  0000D8  94D5               	bcf	4053,2,c	;volatile
   264                           
   265                           ;main.c: 112: T0CONbits.T08BIT = 1;
   266  0000DA  8CD5               	bsf	4053,6,c	;volatile
   267                           
   268                           ;main.c: 113: T0CONbits.T0SE = 0;
   269  0000DC  98D5               	bcf	4053,4,c	;volatile
   270                           
   271                           ;main.c: 115: INTCONbits.TMR0IE = 1;
   272  0000DE  8AF2               	bsf	intcon,5,c	;volatile
   273                           
   274                           ;main.c: 117: INTCONbits.TMR0IF = 0;
   275  0000E0  94F2               	bcf	intcon,2,c	;volatile
   276                           
   277                           ;main.c: 118: INTCONbits.GIE = 1;
   278  0000E2  8EF2               	bsf	intcon,7,c	;volatile
   279                           
   280                           ;main.c: 120: TRISD7 = 0;
   281  0000E4  9E95               	bcf	3989,7,c	;volatile
   282                           
   283                           ;main.c: 121: TRISD6 = 0;
   284  0000E6  9C95               	bcf	3989,6,c	;volatile
   285                           
   286                           ;main.c: 122: TRISD5 = 0;
   287  0000E8  9A95               	bcf	3989,5,c	;volatile
   288                           
   289                           ;main.c: 123: TRISD4 = 0;
   290  0000EA  9895               	bcf	3989,4,c	;volatile
   291                           
   292                           ;main.c: 124: TRISD3 = 0;
   293  0000EC  9695               	bcf	3989,3,c	;volatile
   294                           
   295                           ;main.c: 125: TRISD2 = 0;
   296  0000EE  9495               	bcf	3989,2,c	;volatile
   297                           
   298                           ;main.c: 126: TRISD1 = 0;
   299  0000F0  9295               	bcf	3989,1,c	;volatile
   300                           
   301                           ;main.c: 127: TRISD0 = 0;
   302  0000F2  9095               	bcf	3989,0,c	;volatile
   303                           
   304                           ;main.c: 129: TRISC5 = 1;
   305  0000F4  8A94               	bsf	3988,5,c	;volatile
   306                           
   307                           ;main.c: 131: TRISC7 = 0;
   308  0000F6  9E94               	bcf	3988,7,c	;volatile
   309                           
   310                           ;main.c: 133: TRISB1 = 0;
   311  0000F8  9293               	bcf	3987,1,c	;volatile
   312                           
   313                           ;main.c: 134: TRISB2 = 0;
   314  0000FA  9493               	bcf	3987,2,c	;volatile
   315                           
   316                           ;main.c: 136: TRISB3 = 0;
   317  0000FC  9693               	bcf	3987,3,c	;volatile
   318                           
   319                           ;main.c: 137: TRISB4 = 0;
   320  0000FE  9893               	bcf	3987,4,c	;volatile
   321                           
   322                           ;main.c: 139: PORTBbits.RB1 = 1;
   323  000100  8281               	bsf	3969,1,c	;volatile
   324                           
   325                           ;main.c: 140: PORTBbits.RB2 = 0;
   326  000102  9481               	bcf	3969,2,c	;volatile
   327                           
   328                           ;main.c: 142: PORTBbits.RB3 = 0;
   329  000104  9681               	bcf	3969,3,c	;volatile
   330                           
   331                           ;main.c: 143: PORTBbits.RB4 = 1;
   332  000106  8881               	bsf	3969,4,c	;volatile
   333  000108                     l57:
   334                           
   335                           ;main.c: 146: if(PORTCbits.RC5 == 1 && PORTCbits.RC5 == 0){
   336  000108  BA82               	btfsc	3970,5,c	;volatile
   337  00010A  BA82               	btfsc	3970,5,c	;volatile
   338  00010C  D7FD               	goto	l57
   339                           
   340                           ;main.c: 147: velocidade++;
   341  00010E  4A22               	infsnz	_velocidade,f,c
   342  000110  2A23               	incf	_velocidade+1,f,c
   343                           
   344                           ;main.c: 148: velocidade = velocidade%3;
   345  000112  C022  F015         	movff	_velocidade,___awmod@dividend
   346  000116  C023  F016         	movff	_velocidade+1,___awmod@dividend+1
   347  00011A  0E00               	movlw	0
   348  00011C  6E18               	movwf	___awmod@divisor+1,c
   349  00011E  0E03               	movlw	3
   350  000120  6E17               	movwf	___awmod@divisor,c
   351  000122  ECB7  F000         	call	___awmod	;wreg free
   352  000126  C015  F022         	movff	?___awmod,_velocidade
   353  00012A  C016  F023         	movff	?___awmod+1,_velocidade+1
   354                           
   355                           ;main.c: 149: if(velocidade == 0){
   356  00012E  5022               	movf	_velocidade,w,c
   357  000130  1023               	iorwf	_velocidade+1,w,c
   358  000132  A4D8               	btfss	status,2,c
   359  000134  D004               	goto	l880
   360                           
   361                           ;main.c: 150: off_duty = 1;
   362  000136  0E00               	movlw	0
   363  000138  6E27               	movwf	_off_duty+1,c
   364  00013A  0E01               	movlw	1
   365  00013C  D010               	goto	L2
   366  00013E                     l880:
   367                           
   368                           ;main.c: 152: else if(velocidade == 1){
   369  00013E  0422               	decf	_velocidade,w,c
   370  000140  1023               	iorwf	_velocidade+1,w,c
   371  000142  A4D8               	btfss	status,2,c
   372  000144  D004               	goto	l884
   373                           
   374                           ;main.c: 153: off_duty = 7;
   375  000146  0E00               	movlw	0
   376  000148  6E27               	movwf	_off_duty+1,c
   377  00014A  0E07               	movlw	7
   378  00014C  D008               	goto	L2
   379  00014E                     l884:
   380                           
   381                           ;main.c: 155: else if(velocidade == 2){
   382  00014E  0E02               	movlw	2
   383  000150  1822               	xorwf	_velocidade,w,c
   384  000152  1023               	iorwf	_velocidade+1,w,c
   385  000154  A4D8               	btfss	status,2,c
   386  000156  D004               	goto	l888
   387                           
   388                           ;main.c: 156: off_duty = 15;
   389  000158  0E00               	movlw	0
   390  00015A  6E27               	movwf	_off_duty+1,c
   391  00015C  0E0F               	movlw	15
   392  00015E                     L2:
   393  00015E  6E26               	movwf	_off_duty,c
   394  000160                     l888:
   395                           
   396                           ;main.c: 157: }
   397                           ;main.c: 158: delayX(10);
   398  000160  0E00               	movlw	0
   399  000162  6E16               	movwf	delayX@n+1,c
   400  000164  0E0A               	movlw	10
   401  000166  6E15               	movwf	delayX@n,c
   402  000168  EC27  F001         	call	_delayX	;wreg free
   403  00016C  D7CD               	goto	l57
   404  00016E                     __end_of_main:
   405                           	opt stack 0
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           intcon	equ	0xFF2
   411                           postinc0	equ	0xFEE
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           status	equ	0xFD8
   415                           
   416 ;; *************** function _delayX *****************
   417 ;; Defined at:
   418 ;;		line 91 in file "/home/rodrigo/Documents/Prog/walle/main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  n               2   20[COMRAM] int 
   421 ;; Auto vars:     Size  Location     Type
   422 ;;  i               2   23[COMRAM] int 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         2       0       0       0       0       0       0
   433 ;;      Locals:         2       0       0       0       0       0       0
   434 ;;      Temps:          1       0       0       0       0       0       0
   435 ;;      Totals:         5       0       0       0       0       0       0
   436 ;;Total ram usage:        5 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    2
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text1
   447  00024E                     __ptext1:
   448                           	opt stack 0
   449  00024E                     _delayX:
   450                           	opt stack 28
   451                           
   452                           ;main.c: 93: for(int i = 0; i < n; i++)
   453                           
   454                           ;incstack = 0
   455  00024E  0E00               	movlw	0
   456  000250  6E19               	movwf	delayX@i+1,c
   457  000252  0E00               	movlw	0
   458  000254  6E18               	movwf	delayX@i,c
   459  000256  D00B               	goto	l45
   460  000258                     l792:
   461                           
   462                           ;main.c: 94: _delay((unsigned long)((1)*(16000000/4000.0)));
   463  000258  0E06               	movlw	6
   464  00025A  6E17               	movwf	??_delayX& (0+255),c
   465  00025C  0E30               	movlw	48
   466  00025E                     u457:
   467  00025E  2EE8               	decfsz	wreg,f,c
   468  000260  D7FE               	goto	u457
   469  000262  2E17               	decfsz	??_delayX& (0+255),f,c
   470  000264  D7FC               	goto	u457
   471  000266  F000 F000          	nop2	
   472  00026A  4A18               	infsnz	delayX@i,f,c
   473  00026C  2A19               	incf	delayX@i+1,f,c
   474  00026E                     l45:
   475  00026E  5015               	movf	delayX@n,w,c
   476  000270  5C18               	subwf	delayX@i,w,c
   477  000272  5019               	movf	delayX@i+1,w,c
   478  000274  0A80               	xorlw	128
   479  000276  6E17               	movwf	??_delayX& (0+255),c
   480  000278  5016               	movf	delayX@n+1,w,c
   481  00027A  0A80               	xorlw	128
   482  00027C  5817               	subwfb	??_delayX& (0+255),w,c
   483  00027E  B0D8               	btfsc	status,0,c
   484  000280  0012               	return	
   485  000282  D7EA               	goto	l792
   486  000284                     __end_of_delayX:
   487                           	opt stack 0
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           intcon	equ	0xFF2
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           status	equ	0xFD8
   498                           
   499 ;; *************** function ___awmod *****************
   500 ;; Defined at:
   501 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awmod.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;  dividend        2   20[COMRAM] int 
   504 ;;  divisor         2   22[COMRAM] int 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  sign            1   25[COMRAM] unsigned char 
   507 ;;  counter         1   24[COMRAM] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  2   20[COMRAM] int 
   510 ;; Registers used:
   511 ;;		wreg, status,2, status,0
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         4       0       0       0       0       0       0
   518 ;;      Locals:         2       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0
   520 ;;      Totals:         6       0       0       0       0       0       0
   521 ;;Total ram usage:        6 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    2
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text2
   532  00016E                     __ptext2:
   533                           	opt stack 0
   534  00016E                     ___awmod:
   535                           	opt stack 28
   536                           
   537                           ;incstack = 0
   538  00016E  0E00               	movlw	0
   539  000170  6E1A               	movwf	___awmod@sign,c
   540  000172  AE16               	btfss	___awmod@dividend+1,7,c
   541  000174  D006               	goto	l804
   542  000176  6C15               	negf	___awmod@dividend,c
   543  000178  1E16               	comf	___awmod@dividend+1,f,c
   544  00017A  B0D8               	btfsc	status,0,c
   545  00017C  2A16               	incf	___awmod@dividend+1,f,c
   546  00017E  0E01               	movlw	1
   547  000180  6E1A               	movwf	___awmod@sign,c
   548  000182                     l804:
   549  000182  AE18               	btfss	___awmod@divisor+1,7,c
   550  000184  D004               	goto	l808
   551  000186  6C17               	negf	___awmod@divisor,c
   552  000188  1E18               	comf	___awmod@divisor+1,f,c
   553  00018A  B0D8               	btfsc	status,0,c
   554  00018C  2A18               	incf	___awmod@divisor+1,f,c
   555  00018E                     l808:
   556  00018E  5017               	movf	___awmod@divisor,w,c
   557  000190  1018               	iorwf	___awmod@divisor+1,w,c
   558  000192  B4D8               	btfsc	status,2,c
   559  000194  D018               	goto	l824
   560  000196  0E01               	movlw	1
   561  000198  6E19               	movwf	___awmod@counter,c
   562  00019A  D004               	goto	l814
   563  00019C                     l812:
   564  00019C  90D8               	bcf	status,0,c
   565  00019E  3617               	rlcf	___awmod@divisor,f,c
   566  0001A0  3618               	rlcf	___awmod@divisor+1,f,c
   567  0001A2  2A19               	incf	___awmod@counter,f,c
   568  0001A4                     l814:
   569  0001A4  AE18               	btfss	___awmod@divisor+1,7,c
   570  0001A6  D7FA               	goto	l812
   571  0001A8                     l816:
   572  0001A8  5017               	movf	___awmod@divisor,w,c
   573  0001AA  5C15               	subwf	___awmod@dividend,w,c
   574  0001AC  5018               	movf	___awmod@divisor+1,w,c
   575  0001AE  5816               	subwfb	___awmod@dividend+1,w,c
   576  0001B0  A0D8               	btfss	status,0,c
   577  0001B2  D004               	goto	l820
   578  0001B4  5017               	movf	___awmod@divisor,w,c
   579  0001B6  5E15               	subwf	___awmod@dividend,f,c
   580  0001B8  5018               	movf	___awmod@divisor+1,w,c
   581  0001BA  5A16               	subwfb	___awmod@dividend+1,f,c
   582  0001BC                     l820:
   583  0001BC  90D8               	bcf	status,0,c
   584  0001BE  3218               	rrcf	___awmod@divisor+1,f,c
   585  0001C0  3217               	rrcf	___awmod@divisor,f,c
   586  0001C2  2E19               	decfsz	___awmod@counter,f,c
   587  0001C4  D7F1               	goto	l816
   588  0001C6                     l824:
   589  0001C6  501A               	movf	___awmod@sign,w,c
   590  0001C8  B4D8               	btfsc	status,2,c
   591  0001CA  D004               	goto	l828
   592  0001CC  6C15               	negf	___awmod@dividend,c
   593  0001CE  1E16               	comf	___awmod@dividend+1,f,c
   594  0001D0  B0D8               	btfsc	status,0,c
   595  0001D2  2A16               	incf	___awmod@dividend+1,f,c
   596  0001D4                     l828:
   597  0001D4  C015  F015         	movff	___awmod@dividend,?___awmod
   598  0001D8  C016  F016         	movff	___awmod@dividend+1,?___awmod+1
   599  0001DC  0012               	return	
   600  0001DE                     __end_of___awmod:
   601                           	opt stack 0
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           intcon	equ	0xFF2
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           status	equ	0xFD8
   612                           
   613 ;; *************** function _tc_int *****************
   614 ;; Defined at:
   615 ;;		line 168 in file "/home/rodrigo/Documents/Prog/walle/main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   629 ;;      Params:         0       0       0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0
   631 ;;      Temps:         14       0       0       0       0       0       0
   632 ;;      Totals:        14       0       0       0       0       0       0
   633 ;;Total ram usage:       14 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    1
   636 ;; This function calls:
   637 ;;		i2___awmod
   638 ;; This function is called by:
   639 ;;		Interrupt level 2
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	intcode
   644  000008                     __pintcode:
   645                           	opt stack 0
   646  000008                     _tc_int:
   647                           	opt stack 28
   648                           
   649                           ;incstack = 0
   650  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   651  00000A  CFFA F007          	movff	pclath,??_tc_int
   652  00000E  CFFB F008          	movff	pclatu,??_tc_int+1
   653  000012  CFE9 F009          	movff	fsr0l,??_tc_int+2
   654  000016  CFEA F00A          	movff	fsr0h,??_tc_int+3
   655  00001A  CFE1 F00B          	movff	fsr1l,??_tc_int+4
   656  00001E  CFE2 F00C          	movff	fsr1h,??_tc_int+5
   657  000022  CFD9 F00D          	movff	fsr2l,??_tc_int+6
   658  000026  CFDA F00E          	movff	fsr2h,??_tc_int+7
   659  00002A  CFF3 F00F          	movff	prodl,??_tc_int+8
   660  00002E  CFF4 F010          	movff	prodh,??_tc_int+9
   661  000032  CFF6 F011          	movff	tblptrl,??_tc_int+10
   662  000036  CFF7 F012          	movff	tblptrh,??_tc_int+11
   663  00003A  CFF8 F013          	movff	tblptru,??_tc_int+12
   664  00003E  CFF5 F014          	movff	tablat,??_tc_int+13
   665                           
   666                           ;main.c: 172: if(INTCONbits.TMR0IF && INTCONbits.TMR0IE)
   667  000042  B4F2               	btfsc	intcon,2,c	;volatile
   668  000044  AAF2               	btfss	intcon,5,c	;volatile
   669  000046  D023               	goto	i2l74
   670                           
   671                           ;main.c: 173: {
   672                           ;main.c: 174: INTCONbits.TMR0IF = 0;
   673  000048  94F2               	bcf	intcon,2,c	;volatile
   674                           
   675                           ;main.c: 176: if(count == off_duty)
   676  00004A  5026               	movf	_off_duty,w,c
   677  00004C  1820               	xorwf	_count,w,c
   678  00004E  E106               	bnz	i2l900
   679  000050  5027               	movf	_off_duty+1,w,c
   680  000052  1821               	xorwf	_count+1,w,c
   681  000054  A4D8               	btfss	status,2,c
   682  000056  D002               	goto	i2l900
   683                           
   684                           ;main.c: 177: {
   685                           ;main.c: 178: RC7 = 1;
   686  000058  8E82               	bsf	3970,7,c	;volatile
   687                           
   688                           ;main.c: 179: LATD4 = 1;
   689  00005A  888C               	bsf	3980,4,c	;volatile
   690  00005C                     i2l900:
   691                           
   692                           ;main.c: 180: }
   693                           ;main.c: 182: if(count == max_cicle)
   694  00005C  5024               	movf	_max_cicle,w,c
   695  00005E  1820               	xorwf	_count,w,c
   696  000060  E106               	bnz	i2l904
   697  000062  5025               	movf	_max_cicle+1,w,c
   698  000064  1821               	xorwf	_count+1,w,c
   699  000066  A4D8               	btfss	status,2,c
   700  000068  D002               	goto	i2l904
   701                           
   702                           ;main.c: 183: {
   703                           ;main.c: 184: RC7 = 0;
   704  00006A  9E82               	bcf	3970,7,c	;volatile
   705                           
   706                           ;main.c: 185: LATD4 = 0;
   707  00006C  988C               	bcf	3980,4,c	;volatile
   708  00006E                     i2l904:
   709                           
   710                           ;main.c: 186: }
   711                           ;main.c: 188: count = count%max_cicle;
   712  00006E  C020  F001         	movff	_count,i2___awmod@dividend
   713  000072  C021  F002         	movff	_count+1,i2___awmod@dividend+1
   714  000076  C024  F003         	movff	_max_cicle,i2___awmod@divisor
   715  00007A  C025  F004         	movff	_max_cicle+1,i2___awmod@divisor+1
   716  00007E  ECEF  F000         	call	i2___awmod	;wreg free
   717  000082  C001  F020         	movff	?i2___awmod,_count
   718  000086  C002  F021         	movff	?i2___awmod+1,_count+1
   719                           
   720                           ;main.c: 189: count++;
   721  00008A  4A20               	infsnz	_count,f,c
   722  00008C  2A21               	incf	_count+1,f,c
   723  00008E                     i2l74:
   724  00008E  C014  FFF5         	movff	??_tc_int+13,tablat
   725  000092  C013  FFF8         	movff	??_tc_int+12,tblptru
   726  000096  C012  FFF7         	movff	??_tc_int+11,tblptrh
   727  00009A  C011  FFF6         	movff	??_tc_int+10,tblptrl
   728  00009E  C010  FFF4         	movff	??_tc_int+9,prodh
   729  0000A2  C00F  FFF3         	movff	??_tc_int+8,prodl
   730  0000A6  C00E  FFDA         	movff	??_tc_int+7,fsr2h
   731  0000AA  C00D  FFD9         	movff	??_tc_int+6,fsr2l
   732  0000AE  C00C  FFE2         	movff	??_tc_int+5,fsr1h
   733  0000B2  C00B  FFE1         	movff	??_tc_int+4,fsr1l
   734  0000B6  C00A  FFEA         	movff	??_tc_int+3,fsr0h
   735  0000BA  C009  FFE9         	movff	??_tc_int+2,fsr0l
   736  0000BE  C008  FFFB         	movff	??_tc_int+1,pclatu
   737  0000C2  C007  FFFA         	movff	??_tc_int,pclath
   738  0000C6  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   739  0000C8  0011               	retfie		f
   740  0000CA                     __end_of_tc_int:
   741                           	opt stack 0
   742                           pclatu	equ	0xFFB
   743                           pclath	equ	0xFFA
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           prodh	equ	0xFF4
   749                           prodl	equ	0xFF3
   750                           intcon	equ	0xFF2
   751                           postinc0	equ	0xFEE
   752                           fsr0h	equ	0xFEA
   753                           fsr0l	equ	0xFE9
   754                           wreg	equ	0xFE8
   755                           postdec1	equ	0xFE5
   756                           fsr1h	equ	0xFE2
   757                           fsr1l	equ	0xFE1
   758                           fsr2h	equ	0xFDA
   759                           fsr2l	equ	0xFD9
   760                           status	equ	0xFD8
   761                           
   762 ;; *************** function i2___awmod *****************
   763 ;; Defined at:
   764 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awmod.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  dividend        2    0[COMRAM] int 
   767 ;;  divisor         2    2[COMRAM] int 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  __awmod         1    5[COMRAM] unsigned char 
   770 ;;  __awmod         1    4[COMRAM] unsigned char 
   771 ;; Return value:  Size  Location     Type
   772 ;;                  2    0[COMRAM] int 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   780 ;;      Params:         4       0       0       0       0       0       0
   781 ;;      Locals:         2       0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0
   783 ;;      Totals:         6       0       0       0       0       0       0
   784 ;;Total ram usage:        6 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_tc_int
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text4
   794  0001DE                     __ptext4:
   795                           	opt stack 0
   796  0001DE                     i2___awmod:
   797                           	opt stack 28
   798                           
   799                           ;incstack = 0
   800  0001DE  0E00               	movlw	0
   801  0001E0  6E06               	movwf	i2___awmod@sign,c
   802  0001E2  AE02               	btfss	i2___awmod@dividend+1,7,c
   803  0001E4  D006               	goto	i2l840
   804  0001E6  6C01               	negf	i2___awmod@dividend,c
   805  0001E8  1E02               	comf	i2___awmod@dividend+1,f,c
   806  0001EA  B0D8               	btfsc	status,0,c
   807  0001EC  2A02               	incf	i2___awmod@dividend+1,f,c
   808  0001EE  0E01               	movlw	1
   809  0001F0  6E06               	movwf	i2___awmod@sign,c
   810  0001F2                     i2l840:
   811  0001F2  AE04               	btfss	i2___awmod@divisor+1,7,c
   812  0001F4  D004               	goto	i2l844
   813  0001F6  6C03               	negf	i2___awmod@divisor,c
   814  0001F8  1E04               	comf	i2___awmod@divisor+1,f,c
   815  0001FA  B0D8               	btfsc	status,0,c
   816  0001FC  2A04               	incf	i2___awmod@divisor+1,f,c
   817  0001FE                     i2l844:
   818  0001FE  5003               	movf	i2___awmod@divisor,w,c
   819  000200  1004               	iorwf	i2___awmod@divisor+1,w,c
   820  000202  B4D8               	btfsc	status,2,c
   821  000204  D018               	goto	i2l860
   822  000206  0E01               	movlw	1
   823  000208  6E05               	movwf	i2___awmod@counter,c
   824  00020A  D004               	goto	i2l850
   825  00020C                     i2l848:
   826  00020C  90D8               	bcf	status,0,c
   827  00020E  3603               	rlcf	i2___awmod@divisor,f,c
   828  000210  3604               	rlcf	i2___awmod@divisor+1,f,c
   829  000212  2A05               	incf	i2___awmod@counter,f,c
   830  000214                     i2l850:
   831  000214  AE04               	btfss	i2___awmod@divisor+1,7,c
   832  000216  D7FA               	goto	i2l848
   833  000218                     i2l852:
   834  000218  5003               	movf	i2___awmod@divisor,w,c
   835  00021A  5C01               	subwf	i2___awmod@dividend,w,c
   836  00021C  5004               	movf	i2___awmod@divisor+1,w,c
   837  00021E  5802               	subwfb	i2___awmod@dividend+1,w,c
   838  000220  A0D8               	btfss	status,0,c
   839  000222  D004               	goto	i2l856
   840  000224  5003               	movf	i2___awmod@divisor,w,c
   841  000226  5E01               	subwf	i2___awmod@dividend,f,c
   842  000228  5004               	movf	i2___awmod@divisor+1,w,c
   843  00022A  5A02               	subwfb	i2___awmod@dividend+1,f,c
   844  00022C                     i2l856:
   845  00022C  90D8               	bcf	status,0,c
   846  00022E  3204               	rrcf	i2___awmod@divisor+1,f,c
   847  000230  3203               	rrcf	i2___awmod@divisor,f,c
   848  000232  2E05               	decfsz	i2___awmod@counter,f,c
   849  000234  D7F1               	goto	i2l852
   850  000236                     i2l860:
   851  000236  5006               	movf	i2___awmod@sign,w,c
   852  000238  B4D8               	btfsc	status,2,c
   853  00023A  D004               	goto	i2l864
   854  00023C  6C01               	negf	i2___awmod@dividend,c
   855  00023E  1E02               	comf	i2___awmod@dividend+1,f,c
   856  000240  B0D8               	btfsc	status,0,c
   857  000242  2A02               	incf	i2___awmod@dividend+1,f,c
   858  000244                     i2l864:
   859  000244  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
   860  000248  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
   861  00024C  0012               	return	
   862  00024E                     __end_ofi2___awmod:
   863                           	opt stack 0
   864  0000                     pclatu	equ	0xFFB
   865                           pclath	equ	0xFFA
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           prodh	equ	0xFF4
   871                           prodl	equ	0xFF3
   872                           intcon	equ	0xFF2
   873                           postinc0	equ	0xFEE
   874                           fsr0h	equ	0xFEA
   875                           fsr0l	equ	0xFE9
   876                           wreg	equ	0xFE8
   877                           postdec1	equ	0xFE5
   878                           fsr1h	equ	0xFE2
   879                           fsr1l	equ	0xFE1
   880                           fsr2h	equ	0xFDA
   881                           fsr2l	equ	0xFD9
   882                           status	equ	0xFD8
   883                           pclatu	equ	0xFFB
   884                           pclath	equ	0xFFA
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           prodh	equ	0xFF4
   890                           prodl	equ	0xFF3
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           fsr0h	equ	0xFEA
   894                           fsr0l	equ	0xFE9
   895                           wreg	equ	0xFE8
   896                           postdec1	equ	0xFE5
   897                           fsr1h	equ	0xFE2
   898                           fsr1l	equ	0xFE1
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           status	equ	0xFD8
   902                           
   903                           	psect	rparam
   904  0000                     pclatu	equ	0xFFB
   905                           pclath	equ	0xFFA
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           intcon	equ	0xFF2
   913                           postinc0	equ	0xFEE
   914                           fsr0h	equ	0xFEA
   915                           fsr0l	equ	0xFE9
   916                           wreg	equ	0xFE8
   917                           postdec1	equ	0xFE5
   918                           fsr1h	equ	0xFE2
   919                           fsr1l	equ	0xFE1
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           status	equ	0xFD8
   923                           
   924                           	psect	temp
   925  000028                     btemp:
   926                           	opt stack 0
   927  000028                     	ds	1
   928  0000                     int$flags	set	btemp
   929                           pclatu	equ	0xFFB
   930                           pclath	equ	0xFFA
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           prodh	equ	0xFF4
   936                           prodl	equ	0xFF3
   937                           intcon	equ	0xFF2
   938                           postinc0	equ	0xFEE
   939                           fsr0h	equ	0xFEA
   940                           fsr0l	equ	0xFE9
   941                           wreg	equ	0xFE8
   942                           postdec1	equ	0xFE5
   943                           fsr1h	equ	0xFE2
   944                           fsr1l	equ	0xFE1
   945                           fsr2h	equ	0xFDA
   946                           fsr2l	equ	0xFD9
   947                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod

Critical Paths under _tc_int in COMRAM

    _tc_int->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     505
                                             26 COMRAM     5     0      5
                            ___awmod
                             _delayX
 ---------------------------------------------------------------------------------
 (1) _delayX                                               5     3      2      89
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     416
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tc_int                                              14    14      0     348
                                              6 COMRAM    14    14      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (3) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _delayX

 _tc_int (ROOT)
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      27       1       41.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      15        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Sep  9 02:31:52 2016

                     l45 026E                       l57 0108             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l820 01BC                      l812 019C                      l804 0182  
                    l814 01A4                      l816 01A8                      l824 01C6  
                    l808 018E                      l828 01D4                      l792 0258  
                    l880 013E                      l884 014E                      l888 0160  
           __CFG_CPB$OFF 000000                      _RC7 007C17             __CFG_CPD$OFF 000000  
                    u457 025E             __CFG_BORV$18 000000             ___awmod@sign 001A  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     i2l74 008E  
                   _main 00CE                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0028                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 00CA  
          __CFG_IESO$OFF 000000             ___param_bank 000010                    ?_main 001B  
        __end_of___awmod 01DE                    _LATD4 007C64                    i2l900 005C  
                  i2l840 01F2                    i2l904 006E                    i2l850 0214  
                  i2l852 0218                    i2l860 0236                    i2l844 01FE  
                  i2l864 0244                    i2l856 022C                    i2l848 020C  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _count 0020  
                  tablat 000FF5                    status 000FD8       __size_ofi2___awmod 0070  
         __CFG_MCLRE$OFF 000000          __initialization 0284             __end_of_main 016E  
                 ??_main 0020            __activetblptr 000000           __CFG_WDTEN$OFF 000000  
                 _TRISB1 007C99                   _TRISB2 007C9A                   _TRISB3 007C9B  
                 _TRISD0 007CA8                   _TRISB4 007C9C                   _TRISD1 007CA9  
                 _TRISD2 007CAA                   _TRISD3 007CAB                   _TRISC5 007CA5  
                 _TRISD4 007CAC                   _TRISD5 007CAD                   _TRISC7 007CA7  
                 _TRISD6 007CAE                   _TRISD7 007CAF           __CFG_XINST$OFF 000000  
              ??___awmod 0019                   _delayX 024E                   _tc_int 0008  
        ___awmod@divisor 0017          ___awmod@counter 0019             __pdataCOMRAM 0024  
      __end_ofi2___awmod 024E                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8           i2___awmod@sign 0006          __CFG_HFOFST$OFF 000000  
             __accesstop 0060  __end_of__initialization 02AC          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  ?_delayX 0015  
                ?_tc_int 0001                  __Hparam 0000                  __Lparam 0000  
                ___awmod 016E          __size_of_delayX 0036          __CFG_STVREN$OFF 000000  
                __pcinit 0284                  __ramtop 0600          __size_of_tc_int 00C2  
                __ptext0 00CE                  __ptext1 024E                  __ptext2 016E  
                __ptext4 01DE                _T0CONbits 000FD5                  delayX@i 0018  
                delayX@n 0015         ___awmod@dividend 0015     end_of_initialization 02AC  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
              _PORTCbits 000F82               _velocidade 0022                i2___awmod 01DE  
         __end_of_delayX 0284            __pidataCOMRAM 02B6           __end_of_tc_int 00CA  
    start_initialization 0284               ?i2___awmod 0001                 ??_delayX 0017  
       __CFG_LPT1OSC$OFF 000000                 ??_tc_int 0007              __pbssCOMRAM 0020  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___awmod 0015  
              _max_cicle 0024              ??i2___awmod 0005         __CFG_WDTPS$32768 000000  
              copy_data0 0298       i2___awmod@dividend 0001                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awmod 0070  
               _off_duty 0026            __size_of_main 00A0                 int$flags 0028  
               main@argc 001B                 main@argv 001D        i2___awmod@divisor 0003  
      i2___awmod@counter 0005               _INTCONbits 000FF2                 intlevel2 0000  
      __CFG_FOSC$INTIO67 000000  
