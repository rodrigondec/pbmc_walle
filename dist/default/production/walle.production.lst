

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Sep 10 06:27:16 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  000402                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _max_cicle
    26  000402  0014               	dw	20
    27                           
    28                           ;initializer for _off_duty
    29  000404  0001               	dw	1
    30                           
    31                           ;initializer for _velocidade
    32  000406  0001               	dw	1
    33  0000                     _INTCONbits	set	4082
    34  0000                     _T0CONbits	set	4053
    35  0000                     _LATD0	set	31840
    36  0000                     _LATD1	set	31841
    37  0000                     _LATD2	set	31842
    38  0000                     _LATD4	set	31844
    39  0000                     _LATD5	set	31845
    40  0000                     _LATD6	set	31846
    41  0000                     _LATD7	set	31847
    42  0000                     _RB1	set	31753
    43  0000                     _RB2	set	31754
    44  0000                     _RB3	set	31755
    45  0000                     _RC5	set	31765
    46  0000                     _RC6	set	31766
    47  0000                     _RC7	set	31767
    48  0000                     _TRISB1	set	31897
    49  0000                     _TRISB2	set	31898
    50  0000                     _TRISB3	set	31899
    51  0000                     _TRISC5	set	31909
    52  0000                     _TRISC6	set	31910
    53  0000                     _TRISC7	set	31911
    54  0000                     _TRISD0	set	31912
    55  0000                     _TRISD1	set	31913
    56  0000                     _TRISD2	set	31914
    57  0000                     _TRISD3	set	31915
    58  0000                     _TRISD4	set	31916
    59  0000                     _TRISD5	set	31917
    60  0000                     _TRISD6	set	31918
    61  0000                     _TRISD7	set	31919
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  0003D0                     __pcinit:
    67                           	opt stack 0
    68  0003D0                     start_initialization:
    69                           	opt stack 0
    70  0003D0                     __initialization:
    71                           	opt stack 0
    72                           
    73                           ; Initialize objects allocated to COMRAM (6 bytes)
    74                           ; load TBLPTR registers with __pidataCOMRAM
    75  0003D0  0E02               	movlw	low __pidataCOMRAM
    76  0003D2  6EF6               	movwf	tblptrl,c
    77  0003D4  0E04               	movlw	high __pidataCOMRAM
    78  0003D6  6EF7               	movwf	tblptrh,c
    79  0003D8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    80  0003DA  6EF8               	movwf	tblptru,c
    81  0003DC  EE00  F020         	lfsr	0,__pdataCOMRAM
    82  0003E0  EE10 F006          	lfsr	1,6
    83  0003E4                     copy_data0:
    84  0003E4  0009               	tblrd		*+
    85  0003E6  CFF5 FFEE          	movff	tablat,postinc0
    86  0003EA  50E5               	movf	postdec1,w,c
    87  0003EC  50E1               	movf	fsr1l,w,c
    88  0003EE  E1FA               	bnz	copy_data0
    89                           
    90                           ; Clear objects allocated to COMRAM (2 bytes)
    91  0003F0  6A27               	clrf	(__pbssCOMRAM+1)& (0+255),c
    92  0003F2  6A26               	clrf	__pbssCOMRAM& (0+255),c
    93  0003F4                     end_of_initialization:
    94                           	opt stack 0
    95  0003F4                     __end_of__initialization:
    96                           	opt stack 0
    97  0003F4  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  0003F6  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  0003F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   100  0003FA  6EF8               	movwf	tblptru,c
   101  0003FC  0100               	movlb	0
   102  0003FE  EF67  F000         	goto	_main	;jump to C main() function
   103                           tblptru	equ	0xFF8
   104                           tblptrh	equ	0xFF7
   105                           tblptrl	equ	0xFF6
   106                           tablat	equ	0xFF5
   107                           postinc0	equ	0xFEE
   108                           postdec1	equ	0xFE5
   109                           fsr1l	equ	0xFE1
   110                           
   111                           	psect	bssCOMRAM
   112  000026                     __pbssCOMRAM:
   113                           	opt stack 0
   114  000026                     _count:
   115                           	opt stack 0
   116  000026                     	ds	2
   117                           tblptru	equ	0xFF8
   118                           tblptrh	equ	0xFF7
   119                           tblptrl	equ	0xFF6
   120                           tablat	equ	0xFF5
   121                           postinc0	equ	0xFEE
   122                           postdec1	equ	0xFE5
   123                           fsr1l	equ	0xFE1
   124                           
   125                           	psect	dataCOMRAM
   126  000020                     __pdataCOMRAM:
   127                           	opt stack 0
   128  000020                     _max_cicle:
   129                           	opt stack 0
   130  000020                     	ds	2
   131  000022                     _off_duty:
   132                           	opt stack 0
   133  000022                     	ds	2
   134  000024                     _velocidade:
   135                           	opt stack 0
   136  000024                     	ds	2
   137                           tblptru	equ	0xFF8
   138                           tblptrh	equ	0xFF7
   139                           tblptrl	equ	0xFF6
   140                           tablat	equ	0xFF5
   141                           postinc0	equ	0xFEE
   142                           postdec1	equ	0xFE5
   143                           fsr1l	equ	0xFE1
   144                           
   145                           	psect	cstackCOMRAM
   146  000001                     __pcstackCOMRAM:
   147                           	opt stack 0
   148  000001                     ?___awmod:
   149                           	opt stack 0
   150  000001                     ___awmod@dividend:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x0
   154  000001                     	ds	2
   155  000003                     ___awmod@divisor:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x2
   159  000003                     	ds	2
   160  000005                     ___awmod@counter:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x4
   164  000005                     	ds	1
   165  000006                     ___awmod@sign:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x5
   169  000006                     	ds	1
   170  000007                     ??_tc_int:
   171                           
   172                           ; 1 bytes @ 0x6
   173  000007                     	ds	14
   174  000015                     delayX@n:
   175                           	opt stack 0
   176  000015                     SetPWM@on:
   177                           	opt stack 0
   178  000015                     Direction@dir:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x14
   182  000015                     	ds	2
   183  000017                     ??_delayX:
   184  000017                     ??_Direction:
   185  000017                     SetPWM@velocidade:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x16
   189  000017                     	ds	1
   190  000018                     delayX@i:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x17
   194  000018                     	ds	1
   195  000019                     ??_SetPWM:
   196                           
   197                           ; 1 bytes @ 0x18
   198  000019                     	ds	2
   199  00001B                     
   200                           ; 2 bytes @ 0x1A
   201  00001B                     	ds	2
   202  00001D                     
   203                           ; 3 bytes @ 0x1C
   204  00001D                     	ds	3
   205  000020                     tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           postdec1	equ	0xFE5
   211                           fsr1l	equ	0xFE1
   212                           
   213                           ; 1 bytes @ 0x1F
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 260 in file "PWMcomTimerV2.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;  argc            2   26[COMRAM] int 
   222 ;;  argv            3   28[COMRAM] PTR PTR unsigned char 
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  2   26[COMRAM] int 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   234 ;;      Params:         5       0       0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0       0       0
   236 ;;      Temps:          0       0       0       0       0       0       0
   237 ;;      Totals:         5       0       0       0       0       0       0
   238 ;;Total ram usage:        5 bytes
   239 ;; Hardware stack levels required when called:    3
   240 ;; This function calls:
   241 ;;		_Direction
   242 ;;		_SetPWM
   243 ;;		_delayX
   244 ;;		_setup
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251  0000CE                     __ptext0:
   252                           	opt stack 0
   253  0000CE                     _main:
   254                           	opt stack 28
   255                           
   256                           ;PWMcomTimerV2.c: 262: setup();
   257                           
   258                           ;incstack = 0
   259  0000CE  ECCE  F001         	call	_setup	;wreg free
   260  0000D2                     l920:
   261                           
   262                           ;PWMcomTimerV2.c: 265: {
   263                           ;PWMcomTimerV2.c: 266: if(RC5 == 0)
   264  0000D2  BA82               	btfsc	3970,5,c	;volatile
   265  0000D4  D7FE               	goto	l920
   266                           
   267                           ;PWMcomTimerV2.c: 267: {
   268                           ;PWMcomTimerV2.c: 268: Direction(frente);
   269  0000D6  0E00               	movlw	0
   270  0000D8  6E16               	movwf	Direction@dir+1,c
   271  0000DA  0E00               	movlw	0
   272  0000DC  6E15               	movwf	Direction@dir,c
   273  0000DE  EC40  F001         	call	_Direction	;wreg free
   274                           
   275                           ;PWMcomTimerV2.c: 269: SetPWM(1,1);
   276  0000E2  0E00               	movlw	0
   277  0000E4  6E16               	movwf	SetPWM@on+1,c
   278  0000E6  0E01               	movlw	1
   279  0000E8  6E15               	movwf	SetPWM@on,c
   280  0000EA  0E00               	movlw	0
   281  0000EC  6E18               	movwf	SetPWM@velocidade+1,c
   282  0000EE  0E01               	movlw	1
   283  0000F0  6E17               	movwf	SetPWM@velocidade,c
   284  0000F2  EC04  F001         	call	_SetPWM	;wreg free
   285                           
   286                           ;PWMcomTimerV2.c: 270: delayX(150);
   287  0000F6  0E00               	movlw	0
   288  0000F8  6E16               	movwf	delayX@n+1,c
   289  0000FA  0E96               	movlw	150
   290  0000FC  6E15               	movwf	delayX@n,c
   291  0000FE  ECB3  F001         	call	_delayX	;wreg free
   292                           
   293                           ;PWMcomTimerV2.c: 272: SetPWM(0,3);
   294  000102  0E00               	movlw	0
   295  000104  6E16               	movwf	SetPWM@on+1,c
   296  000106  0E00               	movlw	0
   297  000108  6E15               	movwf	SetPWM@on,c
   298  00010A  0E00               	movlw	0
   299  00010C  6E18               	movwf	SetPWM@velocidade+1,c
   300  00010E  0E03               	movlw	3
   301  000110  6E17               	movwf	SetPWM@velocidade,c
   302  000112  EC04  F001         	call	_SetPWM	;wreg free
   303                           
   304                           ;PWMcomTimerV2.c: 273: delayX(50);
   305  000116  0E00               	movlw	0
   306  000118  6E16               	movwf	delayX@n+1,c
   307  00011A  0E32               	movlw	50
   308  00011C  6E15               	movwf	delayX@n,c
   309  00011E  ECB3  F001         	call	_delayX	;wreg free
   310                           
   311                           ;PWMcomTimerV2.c: 275: Direction(tras);
   312  000122  0E00               	movlw	0
   313  000124  6E16               	movwf	Direction@dir+1,c
   314  000126  0E01               	movlw	1
   315  000128  6E15               	movwf	Direction@dir,c
   316  00012A  EC40  F001         	call	_Direction	;wreg free
   317                           
   318                           ;PWMcomTimerV2.c: 276: SetPWM(1,2);
   319  00012E  0E00               	movlw	0
   320  000130  6E16               	movwf	SetPWM@on+1,c
   321  000132  0E01               	movlw	1
   322  000134  6E15               	movwf	SetPWM@on,c
   323  000136  0E00               	movlw	0
   324  000138  6E18               	movwf	SetPWM@velocidade+1,c
   325  00013A  0E02               	movlw	2
   326  00013C  6E17               	movwf	SetPWM@velocidade,c
   327  00013E  EC04  F001         	call	_SetPWM	;wreg free
   328                           
   329                           ;PWMcomTimerV2.c: 277: delayX(150);
   330  000142  0E00               	movlw	0
   331  000144  6E16               	movwf	delayX@n+1,c
   332  000146  0E96               	movlw	150
   333  000148  6E15               	movwf	delayX@n,c
   334  00014A  ECB3  F001         	call	_delayX	;wreg free
   335                           
   336                           ;PWMcomTimerV2.c: 279: SetPWM(0,3);
   337  00014E  0E00               	movlw	0
   338  000150  6E16               	movwf	SetPWM@on+1,c
   339  000152  0E00               	movlw	0
   340  000154  6E15               	movwf	SetPWM@on,c
   341  000156  0E00               	movlw	0
   342  000158  6E18               	movwf	SetPWM@velocidade+1,c
   343  00015A  0E03               	movlw	3
   344  00015C  6E17               	movwf	SetPWM@velocidade,c
   345  00015E  EC04  F001         	call	_SetPWM	;wreg free
   346                           
   347                           ;PWMcomTimerV2.c: 280: delayX(50);
   348  000162  0E00               	movlw	0
   349  000164  6E16               	movwf	delayX@n+1,c
   350  000166  0E32               	movlw	50
   351  000168  6E15               	movwf	delayX@n,c
   352  00016A  ECB3  F001         	call	_delayX	;wreg free
   353                           
   354                           ;PWMcomTimerV2.c: 282: Direction(esquerda);
   355  00016E  0E00               	movlw	0
   356  000170  6E16               	movwf	Direction@dir+1,c
   357  000172  0E02               	movlw	2
   358  000174  6E15               	movwf	Direction@dir,c
   359  000176  EC40  F001         	call	_Direction	;wreg free
   360                           
   361                           ;PWMcomTimerV2.c: 283: SetPWM(1,3);
   362  00017A  0E00               	movlw	0
   363  00017C  6E16               	movwf	SetPWM@on+1,c
   364  00017E  0E01               	movlw	1
   365  000180  6E15               	movwf	SetPWM@on,c
   366  000182  0E00               	movlw	0
   367  000184  6E18               	movwf	SetPWM@velocidade+1,c
   368  000186  0E03               	movlw	3
   369  000188  6E17               	movwf	SetPWM@velocidade,c
   370  00018A  EC04  F001         	call	_SetPWM	;wreg free
   371                           
   372                           ;PWMcomTimerV2.c: 284: delayX(100);
   373  00018E  0E00               	movlw	0
   374  000190  6E16               	movwf	delayX@n+1,c
   375  000192  0E64               	movlw	100
   376  000194  6E15               	movwf	delayX@n,c
   377  000196  ECB3  F001         	call	_delayX	;wreg free
   378                           
   379                           ;PWMcomTimerV2.c: 286: SetPWM(0,3);
   380  00019A  0E00               	movlw	0
   381  00019C  6E16               	movwf	SetPWM@on+1,c
   382  00019E  0E00               	movlw	0
   383  0001A0  6E15               	movwf	SetPWM@on,c
   384  0001A2  0E00               	movlw	0
   385  0001A4  6E18               	movwf	SetPWM@velocidade+1,c
   386  0001A6  0E03               	movlw	3
   387  0001A8  6E17               	movwf	SetPWM@velocidade,c
   388  0001AA  EC04  F001         	call	_SetPWM	;wreg free
   389                           
   390                           ;PWMcomTimerV2.c: 287: delayX(50);
   391  0001AE  0E00               	movlw	0
   392  0001B0  6E16               	movwf	delayX@n+1,c
   393  0001B2  0E32               	movlw	50
   394  0001B4  6E15               	movwf	delayX@n,c
   395  0001B6  ECB3  F001         	call	_delayX	;wreg free
   396                           
   397                           ;PWMcomTimerV2.c: 289: Direction(direita);
   398  0001BA  0E00               	movlw	0
   399  0001BC  6E16               	movwf	Direction@dir+1,c
   400  0001BE  0E03               	movlw	3
   401  0001C0  6E15               	movwf	Direction@dir,c
   402  0001C2  EC40  F001         	call	_Direction	;wreg free
   403                           
   404                           ;PWMcomTimerV2.c: 290: SetPWM(1,1);
   405  0001C6  0E00               	movlw	0
   406  0001C8  6E16               	movwf	SetPWM@on+1,c
   407  0001CA  0E01               	movlw	1
   408  0001CC  6E15               	movwf	SetPWM@on,c
   409  0001CE  0E00               	movlw	0
   410  0001D0  6E18               	movwf	SetPWM@velocidade+1,c
   411  0001D2  0E01               	movlw	1
   412  0001D4  6E17               	movwf	SetPWM@velocidade,c
   413  0001D6  EC04  F001         	call	_SetPWM	;wreg free
   414                           
   415                           ;PWMcomTimerV2.c: 291: delayX(100);
   416  0001DA  0E00               	movlw	0
   417  0001DC  6E16               	movwf	delayX@n+1,c
   418  0001DE  0E64               	movlw	100
   419  0001E0  6E15               	movwf	delayX@n,c
   420  0001E2  ECB3  F001         	call	_delayX	;wreg free
   421                           
   422                           ;PWMcomTimerV2.c: 293: SetPWM(0,3);
   423  0001E6  0E00               	movlw	0
   424  0001E8  6E16               	movwf	SetPWM@on+1,c
   425  0001EA  0E00               	movlw	0
   426  0001EC  6E15               	movwf	SetPWM@on,c
   427  0001EE  0E00               	movlw	0
   428  0001F0  6E18               	movwf	SetPWM@velocidade+1,c
   429  0001F2  0E03               	movlw	3
   430  0001F4  6E17               	movwf	SetPWM@velocidade,c
   431  0001F6  EC04  F001         	call	_SetPWM	;wreg free
   432                           
   433                           ;PWMcomTimerV2.c: 294: delayX(50);
   434  0001FA  0E00               	movlw	0
   435  0001FC  6E16               	movwf	delayX@n+1,c
   436  0001FE  0E32               	movlw	50
   437  000200  6E15               	movwf	delayX@n,c
   438  000202  ECB3  F001         	call	_delayX	;wreg free
   439  000206  D765               	goto	l920
   440  000208                     __end_of_main:
   441                           	opt stack 0
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450 ;; *************** function _setup *****************
   451 ;; Defined at:
   452 ;;		line 101 in file "PWMcomTimerV2.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		None
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   466 ;;      Params:         0       0       0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    2
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text1
   481  00039C                     __ptext1:
   482                           	opt stack 0
   483  00039C                     _setup:
   484                           	opt stack 28
   485                           
   486                           ;PWMcomTimerV2.c: 104: T0CONbits.TMR0ON = 0;
   487                           
   488                           ;incstack = 0
   489  00039C  9ED5               	bcf	4053,7,c	;volatile
   490                           
   491                           ;PWMcomTimerV2.c: 105: T0CONbits.T0CS = 0;
   492  00039E  9AD5               	bcf	4053,5,c	;volatile
   493                           
   494                           ;PWMcomTimerV2.c: 106: T0CONbits.PSA = 0;
   495  0003A0  96D5               	bcf	4053,3,c	;volatile
   496                           
   497                           ;PWMcomTimerV2.c: 107: T0CONbits.T0PS0 = 0;
   498  0003A2  90D5               	bcf	4053,0,c	;volatile
   499                           
   500                           ;PWMcomTimerV2.c: 108: T0CONbits.T0PS1 = 0;
   501  0003A4  92D5               	bcf	4053,1,c	;volatile
   502                           
   503                           ;PWMcomTimerV2.c: 109: T0CONbits.T0PS2 = 0;
   504  0003A6  94D5               	bcf	4053,2,c	;volatile
   505                           
   506                           ;PWMcomTimerV2.c: 110: T0CONbits.T08BIT = 1;
   507  0003A8  8CD5               	bsf	4053,6,c	;volatile
   508                           
   509                           ;PWMcomTimerV2.c: 111: T0CONbits.T0SE = 0;
   510  0003AA  98D5               	bcf	4053,4,c	;volatile
   511                           
   512                           ;PWMcomTimerV2.c: 113: INTCONbits.TMR0IE = 1;
   513  0003AC  8AF2               	bsf	intcon,5,c	;volatile
   514                           
   515                           ;PWMcomTimerV2.c: 114: INTCONbits.TMR0IF = 0;
   516  0003AE  94F2               	bcf	intcon,2,c	;volatile
   517                           
   518                           ;PWMcomTimerV2.c: 115: INTCONbits.GIE = 1;
   519  0003B0  8EF2               	bsf	intcon,7,c	;volatile
   520                           
   521                           ;PWMcomTimerV2.c: 118: TRISD0 = 0;
   522  0003B2  9095               	bcf	3989,0,c	;volatile
   523                           
   524                           ;PWMcomTimerV2.c: 119: TRISD1 = 0;
   525  0003B4  9295               	bcf	3989,1,c	;volatile
   526                           
   527                           ;PWMcomTimerV2.c: 121: TRISD2 = 0;
   528  0003B6  9495               	bcf	3989,2,c	;volatile
   529                           
   530                           ;PWMcomTimerV2.c: 123: TRISD3 = 0;
   531  0003B8  9695               	bcf	3989,3,c	;volatile
   532                           
   533                           ;PWMcomTimerV2.c: 125: TRISD4 = 0;
   534  0003BA  9895               	bcf	3989,4,c	;volatile
   535                           
   536                           ;PWMcomTimerV2.c: 126: TRISD5 = 0;
   537  0003BC  9A95               	bcf	3989,5,c	;volatile
   538                           
   539                           ;PWMcomTimerV2.c: 128: TRISD6 = 0;
   540  0003BE  9C95               	bcf	3989,6,c	;volatile
   541                           
   542                           ;PWMcomTimerV2.c: 129: TRISD7 = 0;
   543  0003C0  9E95               	bcf	3989,7,c	;volatile
   544                           
   545                           ;PWMcomTimerV2.c: 132: TRISC5 = 1;
   546  0003C2  8A94               	bsf	3988,5,c	;volatile
   547                           
   548                           ;PWMcomTimerV2.c: 134: TRISC6 = 0;
   549  0003C4  9C94               	bcf	3988,6,c	;volatile
   550                           
   551                           ;PWMcomTimerV2.c: 136: TRISB2 = 0;
   552  0003C6  9493               	bcf	3987,2,c	;volatile
   553                           
   554                           ;PWMcomTimerV2.c: 137: TRISB3 = 0;
   555  0003C8  9693               	bcf	3987,3,c	;volatile
   556                           
   557                           ;PWMcomTimerV2.c: 139: TRISB1 = 0;
   558  0003CA  9293               	bcf	3987,1,c	;volatile
   559                           
   560                           ;PWMcomTimerV2.c: 140: TRISC7 = 0;
   561  0003CC  9E94               	bcf	3988,7,c	;volatile
   562  0003CE  0012               	return		;funcret
   563  0003D0                     __end_of_setup:
   564                           	opt stack 0
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           intcon	equ	0xFF2
   570                           postinc0	equ	0xFEE
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574 ;; *************** function _delayX *****************
   575 ;; Defined at:
   576 ;;		line 145 in file "PWMcomTimerV2.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  n               2   20[COMRAM] int 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  i               2   23[COMRAM] int 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   590 ;;      Params:         2       0       0       0       0       0       0
   591 ;;      Locals:         2       0       0       0       0       0       0
   592 ;;      Temps:          1       0       0       0       0       0       0
   593 ;;      Totals:         5       0       0       0       0       0       0
   594 ;;Total ram usage:        5 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    2
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text2
   605  000366                     __ptext2:
   606                           	opt stack 0
   607  000366                     _delayX:
   608                           	opt stack 28
   609                           
   610                           ;PWMcomTimerV2.c: 147: for(int i = 0; i < n; i++)
   611                           
   612                           ;incstack = 0
   613  000366  0E00               	movlw	0
   614  000368  6E19               	movwf	delayX@i+1,c
   615  00036A  0E00               	movlw	0
   616  00036C  6E18               	movwf	delayX@i,c
   617  00036E  D00B               	goto	l74
   618  000370                     l832:
   619                           
   620                           ;PWMcomTimerV2.c: 148: _delay((unsigned long)((1)*(16000000/4000.0)));
   621  000370  0E06               	movlw	6
   622  000372  6E17               	movwf	??_delayX& (0+255),c
   623  000374  0E30               	movlw	48
   624  000376                     u277:
   625  000376  2EE8               	decfsz	wreg,f,c
   626  000378  D7FE               	goto	u277
   627  00037A  2E17               	decfsz	??_delayX& (0+255),f,c
   628  00037C  D7FC               	goto	u277
   629  00037E  F000 F000          	nop2	
   630  000382  4A18               	infsnz	delayX@i,f,c
   631  000384  2A19               	incf	delayX@i+1,f,c
   632  000386                     l74:
   633  000386  5015               	movf	delayX@n,w,c
   634  000388  5C18               	subwf	delayX@i,w,c
   635  00038A  5019               	movf	delayX@i+1,w,c
   636  00038C  0A80               	xorlw	128
   637  00038E  6E17               	movwf	??_delayX& (0+255),c
   638  000390  5016               	movf	delayX@n+1,w,c
   639  000392  0A80               	xorlw	128
   640  000394  5817               	subwfb	??_delayX& (0+255),w,c
   641  000396  B0D8               	btfsc	status,0,c
   642  000398  0012               	return	
   643  00039A  D7EA               	goto	l832
   644  00039C                     __end_of_delayX:
   645                           	opt stack 0
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           intcon	equ	0xFF2
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           status	equ	0xFD8
   656                           
   657 ;; *************** function _SetPWM *****************
   658 ;; Defined at:
   659 ;;		line 153 in file "PWMcomTimerV2.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  on              2   20[COMRAM] int 
   662 ;;  velocidade      2   22[COMRAM] int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   674 ;;      Params:         4       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0
   676 ;;      Temps:          2       0       0       0       0       0       0
   677 ;;      Totals:         6       0       0       0       0       0       0
   678 ;;Total ram usage:        6 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    2
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text3
   689  000208                     __ptext3:
   690                           	opt stack 0
   691  000208                     _SetPWM:
   692                           	opt stack 28
   693                           
   694                           ;PWMcomTimerV2.c: 155: if(on)
   695                           
   696                           ;incstack = 0
   697  000208  5015               	movf	SetPWM@on,w,c
   698  00020A  1016               	iorwf	SetPWM@on+1,w,c
   699  00020C  B4D8               	btfsc	status,2,c
   700  00020E  D031               	goto	l80
   701                           
   702                           ;PWMcomTimerV2.c: 156: {
   703                           ;PWMcomTimerV2.c: 157: T0CONbits.TMR0ON = 1;
   704  000210  8ED5               	bsf	4053,7,c	;volatile
   705                           
   706                           ;PWMcomTimerV2.c: 159: switch(velocidade)
   707  000212  D01C               	goto	l866
   708  000214                     l840:
   709                           
   710                           ;PWMcomTimerV2.c: 162: off_duty = 15;
   711  000214  0E00               	movlw	0
   712  000216  6E23               	movwf	_off_duty+1,c
   713  000218  0E0F               	movlw	15
   714  00021A  6E22               	movwf	_off_duty,c
   715                           
   716                           ;PWMcomTimerV2.c: 163: LATD0 = 1;
   717  00021C  808C               	bsf	3980,0,c	;volatile
   718                           
   719                           ;PWMcomTimerV2.c: 164: LATD1 = 0;
   720  00021E  928C               	bcf	3980,1,c	;volatile
   721                           
   722                           ;PWMcomTimerV2.c: 165: break;
   723  000220  0012               	return	
   724  000222                     l846:
   725                           
   726                           ;PWMcomTimerV2.c: 168: off_duty = 8;
   727  000222  0E00               	movlw	0
   728  000224  6E23               	movwf	_off_duty+1,c
   729  000226  0E08               	movlw	8
   730  000228  6E22               	movwf	_off_duty,c
   731                           
   732                           ;PWMcomTimerV2.c: 169: LATD0 = 0;
   733  00022A  908C               	bcf	3980,0,c	;volatile
   734                           
   735                           ;PWMcomTimerV2.c: 170: LATD1 = 1;
   736  00022C  828C               	bsf	3980,1,c	;volatile
   737                           
   738                           ;PWMcomTimerV2.c: 171: break;
   739  00022E  0012               	return	
   740  000230                     l852:
   741                           
   742                           ;PWMcomTimerV2.c: 174: off_duty = 1;
   743  000230  0E00               	movlw	0
   744  000232  6E23               	movwf	_off_duty+1,c
   745  000234  0E01               	movlw	1
   746  000236  6E22               	movwf	_off_duty,c
   747                           
   748                           ;PWMcomTimerV2.c: 175: LATD0 = 1;
   749  000238  808C               	bsf	3980,0,c	;volatile
   750                           
   751                           ;PWMcomTimerV2.c: 176: LATD1 = 1;
   752  00023A  828C               	bsf	3980,1,c	;volatile
   753                           
   754                           ;PWMcomTimerV2.c: 177: break;
   755  00023C  0012               	return	
   756  00023E                     l858:
   757                           
   758                           ;PWMcomTimerV2.c: 180: off_duty = 1;
   759  00023E  0E00               	movlw	0
   760  000240  6E23               	movwf	_off_duty+1,c
   761  000242  0E01               	movlw	1
   762  000244  6E22               	movwf	_off_duty,c
   763                           
   764                           ;PWMcomTimerV2.c: 181: LATD0 = 1;
   765  000246  808C               	bsf	3980,0,c	;volatile
   766                           
   767                           ;PWMcomTimerV2.c: 182: LATD1 = 1;
   768  000248  828C               	bsf	3980,1,c	;volatile
   769                           
   770                           ;PWMcomTimerV2.c: 184: }
   771                           
   772                           ;PWMcomTimerV2.c: 183: break;
   773  00024A  0012               	return	
   774  00024C                     l866:
   775  00024C  C017  F019         	movff	SetPWM@velocidade,??_SetPWM
   776  000250  C018  F01A         	movff	SetPWM@velocidade+1,??_SetPWM+1
   777                           
   778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   779                           ; Switch size 1, requested type "space"
   780                           ; Number of cases is 1, Range of values is 0 to 0
   781                           ; switch strategies available:
   782                           ; Name         Instructions Cycles
   783                           ; simple_byte            4     3 (average)
   784                           ;	Chosen strategy is simple_byte
   785  000254  501A               	movf	??_SetPWM+1,w,c
   786  000256  0A00               	xorlw	0	; case 0
   787  000258  A4D8               	btfss	status,2,c
   788  00025A  D7F1               	goto	l858
   789                           
   790                           ; Switch size 1, requested type "space"
   791                           ; Number of cases is 3, Range of values is 1 to 3
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte           10     6 (average)
   795                           ;	Chosen strategy is simple_byte
   796  00025C  5019               	movf	??_SetPWM,w,c
   797  00025E  0A01               	xorlw	1	; case 1
   798  000260  B4D8               	btfsc	status,2,c
   799  000262  D7D8               	goto	l840
   800  000264  0A03               	xorlw	3	; case 2
   801  000266  B4D8               	btfsc	status,2,c
   802  000268  D7DC               	goto	l846
   803  00026A  0A01               	xorlw	1	; case 3
   804  00026C  B4D8               	btfsc	status,2,c
   805  00026E  D7E0               	goto	l852
   806  000270  D7E6               	goto	l858
   807  000272                     l80:
   808                           
   809                           ;PWMcomTimerV2.c: 186: else
   810                           ;PWMcomTimerV2.c: 187: {
   811                           ;PWMcomTimerV2.c: 188: RC6 = 0;
   812  000272  9C82               	bcf	3970,6,c	;volatile
   813                           
   814                           ;PWMcomTimerV2.c: 189: T0CONbits.TMR0ON = 0;
   815  000274  9ED5               	bcf	4053,7,c	;volatile
   816                           
   817                           ;PWMcomTimerV2.c: 190: INTCONbits.TMR0IF = 0;
   818  000276  94F2               	bcf	intcon,2,c	;volatile
   819                           
   820                           ;PWMcomTimerV2.c: 192: LATD0 = 0;
   821  000278  908C               	bcf	3980,0,c	;volatile
   822                           
   823                           ;PWMcomTimerV2.c: 193: LATD1 = 0;
   824  00027A  928C               	bcf	3980,1,c	;volatile
   825                           
   826                           ;PWMcomTimerV2.c: 194: LATD2 = 0;
   827  00027C  948C               	bcf	3980,2,c	;volatile
   828  00027E  0012               	return	
   829  000280                     __end_of_SetPWM:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           intcon	equ	0xFF2
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           postdec1	equ	0xFE5
   839                           fsr1l	equ	0xFE1
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function _Direction *****************
   843 ;; Defined at:
   844 ;;		line 199 in file "PWMcomTimerV2.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  dir             2   20[COMRAM] int 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   858 ;;      Params:         2       0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0
   860 ;;      Temps:          2       0       0       0       0       0       0
   861 ;;      Totals:         4       0       0       0       0       0       0
   862 ;;Total ram usage:        4 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    2
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text4
   873  000280                     __ptext4:
   874                           	opt stack 0
   875  000280                     _Direction:
   876                           	opt stack 28
   877                           
   878                           ;PWMcomTimerV2.c: 201: switch(dir)
   879                           
   880                           ;incstack = 0
   881  000280  D024               	goto	l876
   882  000282                     l92:
   883                           
   884                           ;PWMcomTimerV2.c: 204: RB2 = 1;
   885  000282  8481               	bsf	3969,2,c	;volatile
   886                           
   887                           ;PWMcomTimerV2.c: 205: RB3 = 0;
   888  000284  9681               	bcf	3969,3,c	;volatile
   889                           
   890                           ;PWMcomTimerV2.c: 207: RB1 = 1;
   891  000286  8281               	bsf	3969,1,c	;volatile
   892                           
   893                           ;PWMcomTimerV2.c: 208: RC7 = 0;
   894  000288  9E82               	bcf	3970,7,c	;volatile
   895                           
   896                           ;PWMcomTimerV2.c: 210: LATD4 = 0;
   897  00028A  988C               	bcf	3980,4,c	;volatile
   898                           
   899                           ;PWMcomTimerV2.c: 211: LATD5 = 0;
   900  00028C  9A8C               	bcf	3980,5,c	;volatile
   901                           
   902                           ;PWMcomTimerV2.c: 212: LATD6 = 1;
   903  00028E  8C8C               	bsf	3980,6,c	;volatile
   904                           
   905                           ;PWMcomTimerV2.c: 213: LATD7 = 0;
   906  000290  9E8C               	bcf	3980,7,c	;volatile
   907                           
   908                           ;PWMcomTimerV2.c: 214: break;
   909  000292  0012               	return	
   910  000294                     l94:
   911                           
   912                           ;PWMcomTimerV2.c: 218: RB2 = 0;
   913  000294  9481               	bcf	3969,2,c	;volatile
   914                           
   915                           ;PWMcomTimerV2.c: 219: RB3 = 1;
   916  000296  8681               	bsf	3969,3,c	;volatile
   917                           
   918                           ;PWMcomTimerV2.c: 221: RB1 = 0;
   919  000298  9281               	bcf	3969,1,c	;volatile
   920                           
   921                           ;PWMcomTimerV2.c: 222: RC7 = 1;
   922  00029A  8E82               	bsf	3970,7,c	;volatile
   923                           
   924                           ;PWMcomTimerV2.c: 224: LATD4 = 0;
   925  00029C  988C               	bcf	3980,4,c	;volatile
   926                           
   927                           ;PWMcomTimerV2.c: 225: LATD5 = 0;
   928  00029E  9A8C               	bcf	3980,5,c	;volatile
   929                           
   930                           ;PWMcomTimerV2.c: 226: LATD6 = 0;
   931  0002A0  9C8C               	bcf	3980,6,c	;volatile
   932                           
   933                           ;PWMcomTimerV2.c: 227: LATD7 = 1;
   934  0002A2  8E8C               	bsf	3980,7,c	;volatile
   935                           
   936                           ;PWMcomTimerV2.c: 228: break;
   937  0002A4  0012               	return	
   938  0002A6                     l95:
   939                           
   940                           ;PWMcomTimerV2.c: 232: RB2 = 1;
   941  0002A6  8481               	bsf	3969,2,c	;volatile
   942                           
   943                           ;PWMcomTimerV2.c: 233: RB3 = 0;
   944  0002A8  9681               	bcf	3969,3,c	;volatile
   945                           
   946                           ;PWMcomTimerV2.c: 235: RB1 = 0;
   947  0002AA  9281               	bcf	3969,1,c	;volatile
   948                           
   949                           ;PWMcomTimerV2.c: 236: RC7 = 1;
   950  0002AC  8E82               	bsf	3970,7,c	;volatile
   951                           
   952                           ;PWMcomTimerV2.c: 238: LATD4 = 1;
   953  0002AE  888C               	bsf	3980,4,c	;volatile
   954                           
   955                           ;PWMcomTimerV2.c: 239: LATD5 = 0;
   956  0002B0  9A8C               	bcf	3980,5,c	;volatile
   957                           
   958                           ;PWMcomTimerV2.c: 240: LATD6 = 0;
   959  0002B2  9C8C               	bcf	3980,6,c	;volatile
   960                           
   961                           ;PWMcomTimerV2.c: 241: LATD7 = 0;
   962  0002B4  9E8C               	bcf	3980,7,c	;volatile
   963                           
   964                           ;PWMcomTimerV2.c: 242: break;
   965  0002B6  0012               	return	
   966  0002B8                     l96:
   967                           
   968                           ;PWMcomTimerV2.c: 246: RB2 = 0;
   969  0002B8  9481               	bcf	3969,2,c	;volatile
   970                           
   971                           ;PWMcomTimerV2.c: 247: RB3 = 1;
   972  0002BA  8681               	bsf	3969,3,c	;volatile
   973                           
   974                           ;PWMcomTimerV2.c: 249: RB1 = 1;
   975  0002BC  8281               	bsf	3969,1,c	;volatile
   976                           
   977                           ;PWMcomTimerV2.c: 250: RC7 = 0;
   978  0002BE  9E82               	bcf	3970,7,c	;volatile
   979                           
   980                           ;PWMcomTimerV2.c: 252: LATD4 = 0;
   981  0002C0  988C               	bcf	3980,4,c	;volatile
   982                           
   983                           ;PWMcomTimerV2.c: 253: LATD5 = 1;
   984  0002C2  8A8C               	bsf	3980,5,c	;volatile
   985                           
   986                           ;PWMcomTimerV2.c: 254: LATD6 = 0;
   987  0002C4  9C8C               	bcf	3980,6,c	;volatile
   988                           
   989                           ;PWMcomTimerV2.c: 255: LATD7 = 0;
   990  0002C6  9E8C               	bcf	3980,7,c	;volatile
   991                           
   992                           ;PWMcomTimerV2.c: 257: }
   993                           
   994                           ;PWMcomTimerV2.c: 256: break;
   995  0002C8  0012               	return	
   996  0002CA                     l876:
   997  0002CA  C015  F017         	movff	Direction@dir,??_Direction
   998  0002CE  C016  F018         	movff	Direction@dir+1,??_Direction+1
   999                           
  1000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1001                           ; Switch size 1, requested type "space"
  1002                           ; Number of cases is 1, Range of values is 0 to 0
  1003                           ; switch strategies available:
  1004                           ; Name         Instructions Cycles
  1005                           ; simple_byte            4     3 (average)
  1006                           ;	Chosen strategy is simple_byte
  1007  0002D2  5018               	movf	??_Direction+1,w,c
  1008  0002D4  0A00               	xorlw	0	; case 0
  1009  0002D6  A4D8               	btfss	status,2,c
  1010  0002D8  0012               	return	
  1011                           
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 4, Range of values is 0 to 3
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte           13     7 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018  0002DA  5017               	movf	??_Direction,w,c
  1019  0002DC  0A00               	xorlw	0	; case 0
  1020  0002DE  B4D8               	btfsc	status,2,c
  1021  0002E0  D7D0               	goto	l92
  1022  0002E2  0A01               	xorlw	1	; case 1
  1023  0002E4  B4D8               	btfsc	status,2,c
  1024  0002E6  D7D6               	goto	l94
  1025  0002E8  0A03               	xorlw	3	; case 2
  1026  0002EA  B4D8               	btfsc	status,2,c
  1027  0002EC  D7DC               	goto	l95
  1028  0002EE  0A01               	xorlw	1	; case 3
  1029  0002F0  A4D8               	btfss	status,2,c
  1030  0002F2  0012               	return	
  1031  0002F4  D7E1               	goto	l96
  1032  0002F6                     __end_of_Direction:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           intcon	equ	0xFF2
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec1	equ	0xFE5
  1042                           fsr1l	equ	0xFE1
  1043                           status	equ	0xFD8
  1044                           
  1045 ;; *************** function _tc_int *****************
  1046 ;; Defined at:
  1047 ;;		line 301 in file "PWMcomTimerV2.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1061 ;;      Params:         0       0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0
  1063 ;;      Temps:         14       0       0       0       0       0       0
  1064 ;;      Totals:        14       0       0       0       0       0       0
  1065 ;;Total ram usage:       14 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    1
  1068 ;; This function calls:
  1069 ;;		___awmod
  1070 ;; This function is called by:
  1071 ;;		Interrupt level 2
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	intcode
  1076  000008                     __pintcode:
  1077                           	opt stack 0
  1078  000008                     _tc_int:
  1079                           	opt stack 28
  1080                           
  1081                           ;incstack = 0
  1082  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1083  00000A  CFFA F007          	movff	pclath,??_tc_int
  1084  00000E  CFFB F008          	movff	pclatu,??_tc_int+1
  1085  000012  CFE9 F009          	movff	fsr0l,??_tc_int+2
  1086  000016  CFEA F00A          	movff	fsr0h,??_tc_int+3
  1087  00001A  CFE1 F00B          	movff	fsr1l,??_tc_int+4
  1088  00001E  CFE2 F00C          	movff	fsr1h,??_tc_int+5
  1089  000022  CFD9 F00D          	movff	fsr2l,??_tc_int+6
  1090  000026  CFDA F00E          	movff	fsr2h,??_tc_int+7
  1091  00002A  CFF3 F00F          	movff	prodl,??_tc_int+8
  1092  00002E  CFF4 F010          	movff	prodh,??_tc_int+9
  1093  000032  CFF6 F011          	movff	tblptrl,??_tc_int+10
  1094  000036  CFF7 F012          	movff	tblptrh,??_tc_int+11
  1095  00003A  CFF8 F013          	movff	tblptru,??_tc_int+12
  1096  00003E  CFF5 F014          	movff	tablat,??_tc_int+13
  1097                           
  1098                           ;PWMcomTimerV2.c: 305: if(INTCONbits.TMR0IF && INTCONbits.TMR0IE)
  1099  000042  B4F2               	btfsc	intcon,2,c	;volatile
  1100  000044  AAF2               	btfss	intcon,5,c	;volatile
  1101  000046  D023               	goto	i2l110
  1102                           
  1103                           ;PWMcomTimerV2.c: 306: {
  1104                           ;PWMcomTimerV2.c: 307: INTCONbits.TMR0IF = 0;
  1105  000048  94F2               	bcf	intcon,2,c	;volatile
  1106                           
  1107                           ;PWMcomTimerV2.c: 309: if(count == off_duty)
  1108  00004A  5022               	movf	_off_duty,w,c
  1109  00004C  1826               	xorwf	_count,w,c
  1110  00004E  E106               	bnz	i2l934
  1111  000050  5023               	movf	_off_duty+1,w,c
  1112  000052  1827               	xorwf	_count+1,w,c
  1113  000054  A4D8               	btfss	status,2,c
  1114  000056  D002               	goto	i2l934
  1115                           
  1116                           ;PWMcomTimerV2.c: 310: {
  1117                           ;PWMcomTimerV2.c: 311: RC6 = 1;
  1118  000058  8C82               	bsf	3970,6,c	;volatile
  1119                           
  1120                           ;PWMcomTimerV2.c: 312: LATD2 = 1;
  1121  00005A  848C               	bsf	3980,2,c	;volatile
  1122  00005C                     i2l934:
  1123                           
  1124                           ;PWMcomTimerV2.c: 313: }
  1125                           ;PWMcomTimerV2.c: 315: if(count == max_cicle)
  1126  00005C  5020               	movf	_max_cicle,w,c
  1127  00005E  1826               	xorwf	_count,w,c
  1128  000060  E106               	bnz	i2l938
  1129  000062  5021               	movf	_max_cicle+1,w,c
  1130  000064  1827               	xorwf	_count+1,w,c
  1131  000066  A4D8               	btfss	status,2,c
  1132  000068  D002               	goto	i2l938
  1133                           
  1134                           ;PWMcomTimerV2.c: 316: {
  1135                           ;PWMcomTimerV2.c: 317: RC6 = 0;
  1136  00006A  9C82               	bcf	3970,6,c	;volatile
  1137                           
  1138                           ;PWMcomTimerV2.c: 318: LATD2 = 0;
  1139  00006C  948C               	bcf	3980,2,c	;volatile
  1140  00006E                     i2l938:
  1141                           
  1142                           ;PWMcomTimerV2.c: 319: }
  1143                           ;PWMcomTimerV2.c: 321: count = count%max_cicle;
  1144  00006E  C026  F001         	movff	_count,___awmod@dividend
  1145  000072  C027  F002         	movff	_count+1,___awmod@dividend+1
  1146  000076  C020  F003         	movff	_max_cicle,___awmod@divisor
  1147  00007A  C021  F004         	movff	_max_cicle+1,___awmod@divisor+1
  1148  00007E  EC7B  F001         	call	___awmod	;wreg free
  1149  000082  C001  F026         	movff	?___awmod,_count
  1150  000086  C002  F027         	movff	?___awmod+1,_count+1
  1151                           
  1152                           ;PWMcomTimerV2.c: 322: count++;
  1153  00008A  4A26               	infsnz	_count,f,c
  1154  00008C  2A27               	incf	_count+1,f,c
  1155  00008E                     i2l110:
  1156  00008E  C014  FFF5         	movff	??_tc_int+13,tablat
  1157  000092  C013  FFF8         	movff	??_tc_int+12,tblptru
  1158  000096  C012  FFF7         	movff	??_tc_int+11,tblptrh
  1159  00009A  C011  FFF6         	movff	??_tc_int+10,tblptrl
  1160  00009E  C010  FFF4         	movff	??_tc_int+9,prodh
  1161  0000A2  C00F  FFF3         	movff	??_tc_int+8,prodl
  1162  0000A6  C00E  FFDA         	movff	??_tc_int+7,fsr2h
  1163  0000AA  C00D  FFD9         	movff	??_tc_int+6,fsr2l
  1164  0000AE  C00C  FFE2         	movff	??_tc_int+5,fsr1h
  1165  0000B2  C00B  FFE1         	movff	??_tc_int+4,fsr1l
  1166  0000B6  C00A  FFEA         	movff	??_tc_int+3,fsr0h
  1167  0000BA  C009  FFE9         	movff	??_tc_int+2,fsr0l
  1168  0000BE  C008  FFFB         	movff	??_tc_int+1,pclatu
  1169  0000C2  C007  FFFA         	movff	??_tc_int,pclath
  1170  0000C6  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1171  0000C8  0011               	retfie		f
  1172  0000CA                     __end_of_tc_int:
  1173                           	opt stack 0
  1174                           pclatu	equ	0xFFB
  1175                           pclath	equ	0xFFA
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           fsr0h	equ	0xFEA
  1185                           fsr0l	equ	0xFE9
  1186                           wreg	equ	0xFE8
  1187                           postdec1	equ	0xFE5
  1188                           fsr1h	equ	0xFE2
  1189                           fsr1l	equ	0xFE1
  1190                           fsr2h	equ	0xFDA
  1191                           fsr2l	equ	0xFD9
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function ___awmod *****************
  1195 ;; Defined at:
  1196 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awmod.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  dividend        2    0[COMRAM] int 
  1199 ;;  divisor         2    2[COMRAM] int 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  sign            1    5[COMRAM] unsigned char 
  1202 ;;  counter         1    4[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2    0[COMRAM] int 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         4       0       0       0       0       0       0
  1213 ;;      Locals:         2       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0
  1215 ;;      Totals:         6       0       0       0       0       0       0
  1216 ;;Total ram usage:        6 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_tc_int
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text6
  1226  0002F6                     __ptext6:
  1227                           	opt stack 0
  1228  0002F6                     ___awmod:
  1229                           	opt stack 28
  1230                           
  1231                           ;incstack = 0
  1232  0002F6  0E00               	movlw	0
  1233  0002F8  6E06               	movwf	___awmod@sign,c
  1234  0002FA  AE02               	btfss	___awmod@dividend+1,7,c
  1235  0002FC  D006               	goto	i2l890
  1236  0002FE  6C01               	negf	___awmod@dividend,c
  1237  000300  1E02               	comf	___awmod@dividend+1,f,c
  1238  000302  B0D8               	btfsc	status,0,c
  1239  000304  2A02               	incf	___awmod@dividend+1,f,c
  1240  000306  0E01               	movlw	1
  1241  000308  6E06               	movwf	___awmod@sign,c
  1242  00030A                     i2l890:
  1243  00030A  AE04               	btfss	___awmod@divisor+1,7,c
  1244  00030C  D004               	goto	i2l894
  1245  00030E  6C03               	negf	___awmod@divisor,c
  1246  000310  1E04               	comf	___awmod@divisor+1,f,c
  1247  000312  B0D8               	btfsc	status,0,c
  1248  000314  2A04               	incf	___awmod@divisor+1,f,c
  1249  000316                     i2l894:
  1250  000316  5003               	movf	___awmod@divisor,w,c
  1251  000318  1004               	iorwf	___awmod@divisor+1,w,c
  1252  00031A  B4D8               	btfsc	status,2,c
  1253  00031C  D018               	goto	i2l910
  1254  00031E  0E01               	movlw	1
  1255  000320  6E05               	movwf	___awmod@counter,c
  1256  000322  D004               	goto	i2l900
  1257  000324                     i2l898:
  1258  000324  90D8               	bcf	status,0,c
  1259  000326  3603               	rlcf	___awmod@divisor,f,c
  1260  000328  3604               	rlcf	___awmod@divisor+1,f,c
  1261  00032A  2A05               	incf	___awmod@counter,f,c
  1262  00032C                     i2l900:
  1263  00032C  AE04               	btfss	___awmod@divisor+1,7,c
  1264  00032E  D7FA               	goto	i2l898
  1265  000330                     i2l902:
  1266  000330  5003               	movf	___awmod@divisor,w,c
  1267  000332  5C01               	subwf	___awmod@dividend,w,c
  1268  000334  5004               	movf	___awmod@divisor+1,w,c
  1269  000336  5802               	subwfb	___awmod@dividend+1,w,c
  1270  000338  A0D8               	btfss	status,0,c
  1271  00033A  D004               	goto	i2l906
  1272  00033C  5003               	movf	___awmod@divisor,w,c
  1273  00033E  5E01               	subwf	___awmod@dividend,f,c
  1274  000340  5004               	movf	___awmod@divisor+1,w,c
  1275  000342  5A02               	subwfb	___awmod@dividend+1,f,c
  1276  000344                     i2l906:
  1277  000344  90D8               	bcf	status,0,c
  1278  000346  3204               	rrcf	___awmod@divisor+1,f,c
  1279  000348  3203               	rrcf	___awmod@divisor,f,c
  1280  00034A  2E05               	decfsz	___awmod@counter,f,c
  1281  00034C  D7F1               	goto	i2l902
  1282  00034E                     i2l910:
  1283  00034E  5006               	movf	___awmod@sign,w,c
  1284  000350  B4D8               	btfsc	status,2,c
  1285  000352  D004               	goto	i2l914
  1286  000354  6C01               	negf	___awmod@dividend,c
  1287  000356  1E02               	comf	___awmod@dividend+1,f,c
  1288  000358  B0D8               	btfsc	status,0,c
  1289  00035A  2A02               	incf	___awmod@dividend+1,f,c
  1290  00035C                     i2l914:
  1291  00035C  C001  F001         	movff	___awmod@dividend,?___awmod
  1292  000360  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1293  000364  0012               	return	
  1294  000366                     __end_of___awmod:
  1295                           	opt stack 0
  1296  0000                     pclatu	equ	0xFFB
  1297                           pclath	equ	0xFFA
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           prodh	equ	0xFF4
  1303                           prodl	equ	0xFF3
  1304                           intcon	equ	0xFF2
  1305                           postinc0	equ	0xFEE
  1306                           fsr0h	equ	0xFEA
  1307                           fsr0l	equ	0xFE9
  1308                           wreg	equ	0xFE8
  1309                           postdec1	equ	0xFE5
  1310                           fsr1h	equ	0xFE2
  1311                           fsr1l	equ	0xFE1
  1312                           fsr2h	equ	0xFDA
  1313                           fsr2l	equ	0xFD9
  1314                           status	equ	0xFD8
  1315                           pclatu	equ	0xFFB
  1316                           pclath	equ	0xFFA
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           prodh	equ	0xFF4
  1322                           prodl	equ	0xFF3
  1323                           intcon	equ	0xFF2
  1324                           postinc0	equ	0xFEE
  1325                           fsr0h	equ	0xFEA
  1326                           fsr0l	equ	0xFE9
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           fsr1h	equ	0xFE2
  1330                           fsr1l	equ	0xFE1
  1331                           fsr2h	equ	0xFDA
  1332                           fsr2l	equ	0xFD9
  1333                           status	equ	0xFD8
  1334                           
  1335                           	psect	rparam
  1336  0000                     pclatu	equ	0xFFB
  1337                           pclath	equ	0xFFA
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           prodh	equ	0xFF4
  1343                           prodl	equ	0xFF3
  1344                           intcon	equ	0xFF2
  1345                           postinc0	equ	0xFEE
  1346                           fsr0h	equ	0xFEA
  1347                           fsr0l	equ	0xFE9
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1h	equ	0xFE2
  1351                           fsr1l	equ	0xFE1
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           
  1356                           	psect	temp
  1357  000028                     btemp:
  1358                           	opt stack 0
  1359  000028                     	ds	1
  1360  0000                     int$flags	set	btemp
  1361                           pclatu	equ	0xFFB
  1362                           pclath	equ	0xFFA
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           prodh	equ	0xFF4
  1368                           prodl	equ	0xFF3
  1369                           intcon	equ	0xFF2
  1370                           postinc0	equ	0xFEE
  1371                           fsr0h	equ	0xFEA
  1372                           fsr0l	equ	0xFE9
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1h	equ	0xFE2
  1376                           fsr1l	equ	0xFE1
  1377                           fsr2h	equ	0xFDA
  1378                           fsr2l	equ	0xFD9
  1379                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SetPWM

Critical Paths under _tc_int in COMRAM

    _tc_int->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    1316
                                             26 COMRAM     5     0      5
                          _Direction
                             _SetPWM
                             _delayX
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayX                                               5     3      2     390
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SetPWM                                               6     2      4     732
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Direction                                            4     2      2     194
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tc_int                                              14    14      0     382
                                              6 COMRAM    14    14      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     382
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Direction
   _SetPWM
   _delayX
   _setup

 _tc_int (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      27       1       41.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      15        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Sep 10 06:27:16 2016

                     l80 0272                       l74 0386                       l92 0282  
                     l94 0294                       l95 02A6                       l96 02B8  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l840 0214                      l832 0370  
                    l920 00D2                      l852 0230                      l846 0222  
                    l858 023E                      l866 024C                      l876 02CA  
           __CFG_CPB$OFF 000000                      _RB1 007C09                      _RB2 007C0A  
                    _RB3 007C0B                      _RC5 007C15                      _RC6 007C16  
                    _RC7 007C17             __CFG_CPD$OFF 000000                      u277 0376  
           __CFG_BORV$18 000000             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     _main 00CE                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0028  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 00CA            __CFG_IESO$OFF 000000             ___param_bank 000010  
                  ?_main 001B          __end_of___awmod 0366                    _LATD0 007C60  
                  _LATD1 007C61                    _LATD2 007C62                    _LATD4 007C64  
                  _LATD5 007C65                    _LATD6 007C66                    _LATD7 007C67  
                  i2l110 008E                    i2l900 032C                    i2l902 0330  
                  i2l910 034E                    i2l914 035C                    i2l906 0344  
                  i2l934 005C                    i2l890 030A                    i2l938 006E  
                  i2l894 0316                    i2l898 0324            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _count 0026                    _setup 039C  
                  tablat 000FF5                    status 000FD8           __CFG_MCLRE$OFF 000000  
        __initialization 03D0             __end_of_main 0208                   ??_main 0020  
          __activetblptr 000002       __size_of_Direction 0076                   ?_setup 0001  
         __CFG_WDTEN$OFF 000000                   _TRISB1 007C99                   _TRISB2 007C9A  
                 _TRISB3 007C9B                   _TRISD0 007CA8                   _TRISD1 007CA9  
                 _TRISD2 007CAA                   _TRISD3 007CAB                   _TRISC5 007CA5  
                 _TRISD4 007CAC                   _TRISC6 007CA6                   _TRISD5 007CAD  
                 _TRISC7 007CA7                   _TRISD6 007CAE                   _TRISD7 007CAF  
                 _SetPWM 0208           __CFG_XINST$OFF 000000                ??___awmod 0005  
                 _delayX 0366                   _tc_int 0008          ___awmod@divisor 0003  
        ___awmod@counter 0005             __pdataCOMRAM 0020                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          __CFG_HFOFST$OFF 000000  
             __accesstop 0060  __end_of__initialization 03F4          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001        __end_of_Direction 02F6           __pcstackCOMRAM 0001  
          __end_of_setup 03D0                  ??_setup 0015                  ?_SetPWM 0015  
       SetPWM@velocidade 0017                  ?_delayX 0015                  ?_tc_int 0001  
                __Hparam 0000                  __Lparam 0000          __size_of_SetPWM 0078  
                ___awmod 02F6          __size_of_delayX 0036          __CFG_STVREN$OFF 000000  
                __pcinit 03D0                  __ramtop 0600          __size_of_tc_int 00C2  
                __ptext0 00CE                  __ptext1 039C                  __ptext2 0366  
                __ptext3 0208                  __ptext4 0280                  __ptext6 02F6  
              _T0CONbits 000FD5                  delayX@i 0018                  delayX@n 0015  
       ___awmod@dividend 0001     end_of_initialization 03F4            __Lmediumconst 0000  
                postdec1 000FE5                  postinc0 000FEE               _velocidade 0024  
         __end_of_SetPWM 0280                _Direction 0280           __end_of_delayX 039C  
          __pidataCOMRAM 0402           __end_of_tc_int 00CA      start_initialization 03D0  
               ??_SetPWM 0019                 ??_delayX 0017               ?_Direction 0015  
       __CFG_LPT1OSC$OFF 000000                 ??_tc_int 0007              __pbssCOMRAM 0026  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___awmod 0001  
              _max_cicle 0020           __size_of_setup 0034         __CFG_WDTPS$32768 000000  
            ??_Direction 0017                 SetPWM@on 0015                copy_data0 03E4  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___awmod 0070             Direction@dir 0015                 _off_duty 0022  
          __size_of_main 013A                 int$flags 0028                 main@argc 001B  
               main@argv 001D               _INTCONbits 000FF2                 intlevel2 0000  
      __CFG_FOSC$INTIO67 000000  
