

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Sep 10 06:18:11 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           	psect	idataCOMRAM
    22  000388                     __pidataCOMRAM:
    23                           	opt stack 0
    24                           
    25                           ;initializer for _max_cicle
    26  000388  0014               	dw	20
    27                           
    28                           ;initializer for _off_duty
    29  00038A  0001               	dw	1
    30  0000                     _INTCONbits	set	4082
    31  0000                     _PORTBbits	set	3969
    32  0000                     _PORTCbits	set	3970
    33  0000                     _T0CONbits	set	4053
    34  0000                     _LATD0	set	31840
    35  0000                     _LATD1	set	31841
    36  0000                     _LATD2	set	31842
    37  0000                     _LATD4	set	31844
    38  0000                     _LATD5	set	31845
    39  0000                     _LATD6	set	31846
    40  0000                     _LATD7	set	31847
    41  0000                     _RC6	set	31766
    42  0000                     _TRISB1	set	31897
    43  0000                     _TRISB2	set	31898
    44  0000                     _TRISB3	set	31899
    45  0000                     _TRISC5	set	31909
    46  0000                     _TRISC6	set	31910
    47  0000                     _TRISC7	set	31911
    48  0000                     _TRISD0	set	31912
    49  0000                     _TRISD1	set	31913
    50  0000                     _TRISD2	set	31914
    51  0000                     _TRISD3	set	31915
    52  0000                     _TRISD4	set	31916
    53  0000                     _TRISD5	set	31917
    54  0000                     _TRISD6	set	31918
    55  0000                     _TRISD7	set	31919
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  0002E8                     __pcinit:
    61                           	opt stack 0
    62  0002E8                     start_initialization:
    63                           	opt stack 0
    64  0002E8                     __initialization:
    65                           	opt stack 0
    66                           
    67                           ; Initialize objects allocated to COMRAM (4 bytes)
    68                           ; load TBLPTR registers with __pidataCOMRAM
    69  0002E8  0E88               	movlw	low __pidataCOMRAM
    70  0002EA  6EF6               	movwf	tblptrl,c
    71  0002EC  0E03               	movlw	high __pidataCOMRAM
    72  0002EE  6EF7               	movwf	tblptrh,c
    73  0002F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    74  0002F2  6EF8               	movwf	tblptru,c
    75  0002F4  EE00  F024         	lfsr	0,__pdataCOMRAM
    76  0002F8  EE10 F004          	lfsr	1,4
    77  0002FC                     copy_data0:
    78  0002FC  0009               	tblrd		*+
    79  0002FE  CFF5 FFEE          	movff	tablat,postinc0
    80  000302  50E5               	movf	postdec1,w,c
    81  000304  50E1               	movf	fsr1l,w,c
    82  000306  E1FA               	bnz	copy_data0
    83                           
    84                           ; Clear objects allocated to COMRAM (4 bytes)
    85  000308  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
    86  00030A  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
    87  00030C  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
    88  00030E  6A20               	clrf	__pbssCOMRAM& (0+255),c
    89  000310                     end_of_initialization:
    90                           	opt stack 0
    91  000310                     __end_of__initialization:
    92                           	opt stack 0
    93  000310  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    94  000312  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    95  000314  0E00               	movlw	low (__Lmediumconst shr (0+16))
    96  000316  6EF8               	movwf	tblptru,c
    97  000318  0100               	movlb	0
    98  00031A  EF67  F000         	goto	_main	;jump to C main() function
    99                           tblptru	equ	0xFF8
   100                           tblptrh	equ	0xFF7
   101                           tblptrl	equ	0xFF6
   102                           tablat	equ	0xFF5
   103                           postinc0	equ	0xFEE
   104                           postdec1	equ	0xFE5
   105                           fsr1l	equ	0xFE1
   106                           
   107                           	psect	bssCOMRAM
   108  000020                     __pbssCOMRAM:
   109                           	opt stack 0
   110  000020                     _count:
   111                           	opt stack 0
   112  000020                     	ds	2
   113  000022                     _velocidade:
   114                           	opt stack 0
   115  000022                     	ds	2
   116                           tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           postinc0	equ	0xFEE
   121                           postdec1	equ	0xFE5
   122                           fsr1l	equ	0xFE1
   123                           
   124                           	psect	dataCOMRAM
   125  000024                     __pdataCOMRAM:
   126                           	opt stack 0
   127  000024                     _max_cicle:
   128                           	opt stack 0
   129  000024                     	ds	2
   130  000026                     _off_duty:
   131                           	opt stack 0
   132  000026                     	ds	2
   133                           tblptru	equ	0xFF8
   134                           tblptrh	equ	0xFF7
   135                           tblptrl	equ	0xFF6
   136                           tablat	equ	0xFF5
   137                           postinc0	equ	0xFEE
   138                           postdec1	equ	0xFE5
   139                           fsr1l	equ	0xFE1
   140                           
   141                           	psect	cstackCOMRAM
   142  000001                     __pcstackCOMRAM:
   143                           	opt stack 0
   144  000001                     ?___awmod:
   145                           	opt stack 0
   146  000001                     ___awmod@dividend:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x0
   150  000001                     	ds	2
   151  000003                     ___awmod@divisor:
   152                           	opt stack 0
   153                           
   154                           ; 2 bytes @ 0x2
   155  000003                     	ds	2
   156  000005                     ___awmod@counter:
   157                           	opt stack 0
   158                           
   159                           ; 1 bytes @ 0x4
   160  000005                     	ds	1
   161  000006                     ___awmod@sign:
   162                           	opt stack 0
   163                           
   164                           ; 1 bytes @ 0x5
   165  000006                     	ds	1
   166  000007                     ??_tc_int:
   167                           
   168                           ; 1 bytes @ 0x6
   169  000007                     	ds	14
   170  000015                     delayX@n:
   171                           	opt stack 0
   172  000015                     SetPWM@on:
   173                           	opt stack 0
   174  000015                     Direction@dir:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x14
   178  000015                     	ds	2
   179  000017                     ??_delayX:
   180  000017                     ??_Direction:
   181  000017                     SetPWM@velocidade:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x16
   185  000017                     	ds	1
   186  000018                     delayX@i:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x17
   190  000018                     	ds	1
   191  000019                     ??_SetPWM:
   192                           
   193                           ; 1 bytes @ 0x18
   194  000019                     	ds	2
   195  00001B                     
   196                           ; 2 bytes @ 0x1A
   197  00001B                     	ds	2
   198  00001D                     
   199                           ; 3 bytes @ 0x1C
   200  00001D                     	ds	3
   201  000020                     tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           ; 1 bytes @ 0x1F
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 254 in file "PWMcomTimerV2.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;  argc            2   26[COMRAM] int 
   218 ;;  argv            3   28[COMRAM] PTR PTR unsigned char 
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  2   26[COMRAM] int 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   230 ;;      Params:         5       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0
   233 ;;      Totals:         5       0       0       0       0       0       0
   234 ;;Total ram usage:        5 bytes
   235 ;; Hardware stack levels required when called:    3
   236 ;; This function calls:
   237 ;;		_Direction
   238 ;;		_SetPWM
   239 ;;		_delayX
   240 ;;		_setup
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text0
   247  0000CE                     __ptext0:
   248                           	opt stack 0
   249  0000CE                     _main:
   250                           	opt stack 28
   251                           
   252                           ;PWMcomTimerV2.c: 256: setup();
   253                           
   254                           ;incstack = 0
   255  0000CE  ECAA  F001         	call	_setup	;wreg free
   256  0000D2                     l914:
   257                           
   258                           ;PWMcomTimerV2.c: 259: {
   259                           ;PWMcomTimerV2.c: 260: if(PORTCbits.RC5 == 0)
   260  0000D2  BA82               	btfsc	3970,5,c	;volatile
   261  0000D4  D7FE               	goto	l914
   262                           
   263                           ;PWMcomTimerV2.c: 261: {
   264                           ;PWMcomTimerV2.c: 262: Direction(frente);
   265  0000D6  0E00               	movlw	0
   266  0000D8  6E16               	movwf	Direction@dir+1,c
   267  0000DA  0E00               	movlw	0
   268  0000DC  6E15               	movwf	Direction@dir,c
   269  0000DE  EC01  F001         	call	_Direction	;wreg free
   270                           
   271                           ;PWMcomTimerV2.c: 263: SetPWM(1,1);
   272  0000E2  0E00               	movlw	0
   273  0000E4  6E16               	movwf	SetPWM@on+1,c
   274  0000E6  0E01               	movlw	1
   275  0000E8  6E15               	movwf	SetPWM@on,c
   276  0000EA  0E00               	movlw	0
   277  0000EC  6E18               	movwf	SetPWM@velocidade+1,c
   278  0000EE  0E01               	movlw	1
   279  0000F0  6E17               	movwf	SetPWM@velocidade,c
   280  0000F2  ECC4  F000         	call	_SetPWM	;wreg free
   281                           
   282                           ;PWMcomTimerV2.c: 264: delayX(150);
   283  0000F6  0E00               	movlw	0
   284  0000F8  6E16               	movwf	delayX@n+1,c
   285  0000FA  0E96               	movlw	150
   286  0000FC  6E15               	movwf	delayX@n,c
   287  0000FE  EC8F  F001         	call	_delayX	;wreg free
   288                           
   289                           ;PWMcomTimerV2.c: 269: Direction(tras);
   290  000102  0E00               	movlw	0
   291  000104  6E16               	movwf	Direction@dir+1,c
   292  000106  0E01               	movlw	1
   293  000108  6E15               	movwf	Direction@dir,c
   294  00010A  EC01  F001         	call	_Direction	;wreg free
   295                           
   296                           ;PWMcomTimerV2.c: 270: SetPWM(1,2);
   297  00010E  0E00               	movlw	0
   298  000110  6E16               	movwf	SetPWM@on+1,c
   299  000112  0E01               	movlw	1
   300  000114  6E15               	movwf	SetPWM@on,c
   301  000116  0E00               	movlw	0
   302  000118  6E18               	movwf	SetPWM@velocidade+1,c
   303  00011A  0E02               	movlw	2
   304  00011C  6E17               	movwf	SetPWM@velocidade,c
   305  00011E  ECC4  F000         	call	_SetPWM	;wreg free
   306                           
   307                           ;PWMcomTimerV2.c: 271: delayX(150);
   308  000122  0E00               	movlw	0
   309  000124  6E16               	movwf	delayX@n+1,c
   310  000126  0E96               	movlw	150
   311  000128  6E15               	movwf	delayX@n,c
   312  00012A  EC8F  F001         	call	_delayX	;wreg free
   313                           
   314                           ;PWMcomTimerV2.c: 276: Direction(esquerda);
   315  00012E  0E00               	movlw	0
   316  000130  6E16               	movwf	Direction@dir+1,c
   317  000132  0E02               	movlw	2
   318  000134  6E15               	movwf	Direction@dir,c
   319  000136  EC01  F001         	call	_Direction	;wreg free
   320                           
   321                           ;PWMcomTimerV2.c: 277: SetPWM(1,3);
   322  00013A  0E00               	movlw	0
   323  00013C  6E16               	movwf	SetPWM@on+1,c
   324  00013E  0E01               	movlw	1
   325  000140  6E15               	movwf	SetPWM@on,c
   326  000142  0E00               	movlw	0
   327  000144  6E18               	movwf	SetPWM@velocidade+1,c
   328  000146  0E03               	movlw	3
   329  000148  6E17               	movwf	SetPWM@velocidade,c
   330  00014A  ECC4  F000         	call	_SetPWM	;wreg free
   331                           
   332                           ;PWMcomTimerV2.c: 278: delayX(100);
   333  00014E  0E00               	movlw	0
   334  000150  6E16               	movwf	delayX@n+1,c
   335  000152  0E64               	movlw	100
   336  000154  6E15               	movwf	delayX@n,c
   337  000156  EC8F  F001         	call	_delayX	;wreg free
   338                           
   339                           ;PWMcomTimerV2.c: 283: Direction(direita);
   340  00015A  0E00               	movlw	0
   341  00015C  6E16               	movwf	Direction@dir+1,c
   342  00015E  0E03               	movlw	3
   343  000160  6E15               	movwf	Direction@dir,c
   344  000162  EC01  F001         	call	_Direction	;wreg free
   345                           
   346                           ;PWMcomTimerV2.c: 284: SetPWM(1,1);
   347  000166  0E00               	movlw	0
   348  000168  6E16               	movwf	SetPWM@on+1,c
   349  00016A  0E01               	movlw	1
   350  00016C  6E15               	movwf	SetPWM@on,c
   351  00016E  0E00               	movlw	0
   352  000170  6E18               	movwf	SetPWM@velocidade+1,c
   353  000172  0E01               	movlw	1
   354  000174  6E17               	movwf	SetPWM@velocidade,c
   355  000176  ECC4  F000         	call	_SetPWM	;wreg free
   356                           
   357                           ;PWMcomTimerV2.c: 285: delayX(100);
   358  00017A  0E00               	movlw	0
   359  00017C  6E16               	movwf	delayX@n+1,c
   360  00017E  0E64               	movlw	100
   361  000180  6E15               	movwf	delayX@n,c
   362  000182  EC8F  F001         	call	_delayX	;wreg free
   363  000186  D7A5               	goto	l914
   364  000188                     __end_of_main:
   365                           	opt stack 0
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374 ;; *************** function _setup *****************
   375 ;; Defined at:
   376 ;;		line 95 in file "PWMcomTimerV2.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		None
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   390 ;;      Params:         0       0       0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; Hardware stack levels required when called:    2
   397 ;; This function calls:
   398 ;;		Nothing
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           	psect	text1
   405  000354                     __ptext1:
   406                           	opt stack 0
   407  000354                     _setup:
   408                           	opt stack 28
   409                           
   410                           ;PWMcomTimerV2.c: 98: T0CONbits.TMR0ON = 0;
   411                           
   412                           ;incstack = 0
   413  000354  9ED5               	bcf	4053,7,c	;volatile
   414                           
   415                           ;PWMcomTimerV2.c: 99: T0CONbits.T0CS = 0;
   416  000356  9AD5               	bcf	4053,5,c	;volatile
   417                           
   418                           ;PWMcomTimerV2.c: 100: T0CONbits.PSA = 0;
   419  000358  96D5               	bcf	4053,3,c	;volatile
   420                           
   421                           ;PWMcomTimerV2.c: 101: T0CONbits.T0PS0 = 0;
   422  00035A  90D5               	bcf	4053,0,c	;volatile
   423                           
   424                           ;PWMcomTimerV2.c: 102: T0CONbits.T0PS1 = 0;
   425  00035C  92D5               	bcf	4053,1,c	;volatile
   426                           
   427                           ;PWMcomTimerV2.c: 103: T0CONbits.T0PS2 = 0;
   428  00035E  94D5               	bcf	4053,2,c	;volatile
   429                           
   430                           ;PWMcomTimerV2.c: 104: T0CONbits.T08BIT = 1;
   431  000360  8CD5               	bsf	4053,6,c	;volatile
   432                           
   433                           ;PWMcomTimerV2.c: 105: T0CONbits.T0SE = 0;
   434  000362  98D5               	bcf	4053,4,c	;volatile
   435                           
   436                           ;PWMcomTimerV2.c: 107: INTCONbits.TMR0IE = 1;
   437  000364  8AF2               	bsf	intcon,5,c	;volatile
   438                           
   439                           ;PWMcomTimerV2.c: 108: INTCONbits.TMR0IF = 0;
   440  000366  94F2               	bcf	intcon,2,c	;volatile
   441                           
   442                           ;PWMcomTimerV2.c: 109: INTCONbits.GIE = 1;
   443  000368  8EF2               	bsf	intcon,7,c	;volatile
   444                           
   445                           ;PWMcomTimerV2.c: 112: TRISD0 = 0;
   446  00036A  9095               	bcf	3989,0,c	;volatile
   447                           
   448                           ;PWMcomTimerV2.c: 113: TRISD1 = 0;
   449  00036C  9295               	bcf	3989,1,c	;volatile
   450                           
   451                           ;PWMcomTimerV2.c: 115: TRISD2 = 0;
   452  00036E  9495               	bcf	3989,2,c	;volatile
   453                           
   454                           ;PWMcomTimerV2.c: 117: TRISD3 = 0;
   455  000370  9695               	bcf	3989,3,c	;volatile
   456                           
   457                           ;PWMcomTimerV2.c: 119: TRISD4 = 0;
   458  000372  9895               	bcf	3989,4,c	;volatile
   459                           
   460                           ;PWMcomTimerV2.c: 120: TRISD5 = 0;
   461  000374  9A95               	bcf	3989,5,c	;volatile
   462                           
   463                           ;PWMcomTimerV2.c: 122: TRISD6 = 0;
   464  000376  9C95               	bcf	3989,6,c	;volatile
   465                           
   466                           ;PWMcomTimerV2.c: 123: TRISD7 = 0;
   467  000378  9E95               	bcf	3989,7,c	;volatile
   468                           
   469                           ;PWMcomTimerV2.c: 126: TRISC5 = 1;
   470  00037A  8A94               	bsf	3988,5,c	;volatile
   471                           
   472                           ;PWMcomTimerV2.c: 128: TRISC6 = 0;
   473  00037C  9C94               	bcf	3988,6,c	;volatile
   474                           
   475                           ;PWMcomTimerV2.c: 130: TRISB2 = 0;
   476  00037E  9493               	bcf	3987,2,c	;volatile
   477                           
   478                           ;PWMcomTimerV2.c: 131: TRISB3 = 0;
   479  000380  9693               	bcf	3987,3,c	;volatile
   480                           
   481                           ;PWMcomTimerV2.c: 133: TRISB1 = 0;
   482  000382  9293               	bcf	3987,1,c	;volatile
   483                           
   484                           ;PWMcomTimerV2.c: 134: TRISC7 = 0;
   485  000384  9E94               	bcf	3988,7,c	;volatile
   486  000386  0012               	return		;funcret
   487  000388                     __end_of_setup:
   488                           	opt stack 0
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           intcon	equ	0xFF2
   494                           postinc0	equ	0xFEE
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498 ;; *************** function _delayX *****************
   499 ;; Defined at:
   500 ;;		line 139 in file "PWMcomTimerV2.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  n               2   20[COMRAM] int 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  i               2   23[COMRAM] int 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   514 ;;      Params:         2       0       0       0       0       0       0
   515 ;;      Locals:         2       0       0       0       0       0       0
   516 ;;      Temps:          1       0       0       0       0       0       0
   517 ;;      Totals:         5       0       0       0       0       0       0
   518 ;;Total ram usage:        5 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    2
   521 ;; This function calls:
   522 ;;		Nothing
   523 ;; This function is called by:
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528                           	psect	text2
   529  00031E                     __ptext2:
   530                           	opt stack 0
   531  00031E                     _delayX:
   532                           	opt stack 28
   533                           
   534                           ;PWMcomTimerV2.c: 141: for(int i = 0; i < n; i++)
   535                           
   536                           ;incstack = 0
   537  00031E  0E00               	movlw	0
   538  000320  6E19               	movwf	delayX@i+1,c
   539  000322  0E00               	movlw	0
   540  000324  6E18               	movwf	delayX@i,c
   541  000326  D00B               	goto	l68
   542  000328                     l826:
   543                           
   544                           ;PWMcomTimerV2.c: 142: _delay((unsigned long)((1)*(16000000/4000.0)));
   545  000328  0E06               	movlw	6
   546  00032A  6E17               	movwf	??_delayX& (0+255),c
   547  00032C  0E30               	movlw	48
   548  00032E                     u277:
   549  00032E  2EE8               	decfsz	wreg,f,c
   550  000330  D7FE               	goto	u277
   551  000332  2E17               	decfsz	??_delayX& (0+255),f,c
   552  000334  D7FC               	goto	u277
   553  000336  F000 F000          	nop2	
   554  00033A  4A18               	infsnz	delayX@i,f,c
   555  00033C  2A19               	incf	delayX@i+1,f,c
   556  00033E                     l68:
   557  00033E  5015               	movf	delayX@n,w,c
   558  000340  5C18               	subwf	delayX@i,w,c
   559  000342  5019               	movf	delayX@i+1,w,c
   560  000344  0A80               	xorlw	128
   561  000346  6E17               	movwf	??_delayX& (0+255),c
   562  000348  5016               	movf	delayX@n+1,w,c
   563  00034A  0A80               	xorlw	128
   564  00034C  5817               	subwfb	??_delayX& (0+255),w,c
   565  00034E  B0D8               	btfsc	status,0,c
   566  000350  0012               	return	
   567  000352  D7EA               	goto	l826
   568  000354                     __end_of_delayX:
   569                           	opt stack 0
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           intcon	equ	0xFF2
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           status	equ	0xFD8
   580                           
   581 ;; *************** function _SetPWM *****************
   582 ;; Defined at:
   583 ;;		line 147 in file "PWMcomTimerV2.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  on              2   20[COMRAM] int 
   586 ;;  velocidade      2   22[COMRAM] int 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         4       0       0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0
   600 ;;      Temps:          2       0       0       0       0       0       0
   601 ;;      Totals:         6       0       0       0       0       0       0
   602 ;;Total ram usage:        6 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    2
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text3
   613  000188                     __ptext3:
   614                           	opt stack 0
   615  000188                     _SetPWM:
   616                           	opt stack 28
   617                           
   618                           ;PWMcomTimerV2.c: 149: if(on)
   619                           
   620                           ;incstack = 0
   621  000188  5015               	movf	SetPWM@on,w,c
   622  00018A  1016               	iorwf	SetPWM@on+1,w,c
   623  00018C  B4D8               	btfsc	status,2,c
   624  00018E  D031               	goto	l74
   625                           
   626                           ;PWMcomTimerV2.c: 150: {
   627                           ;PWMcomTimerV2.c: 151: T0CONbits.TMR0ON = 1;
   628  000190  8ED5               	bsf	4053,7,c	;volatile
   629                           
   630                           ;PWMcomTimerV2.c: 153: switch(velocidade)
   631  000192  D01C               	goto	l860
   632  000194                     l834:
   633                           
   634                           ;PWMcomTimerV2.c: 156: off_duty = 15;
   635  000194  0E00               	movlw	0
   636  000196  6E27               	movwf	_off_duty+1,c
   637  000198  0E0F               	movlw	15
   638  00019A  6E26               	movwf	_off_duty,c
   639                           
   640                           ;PWMcomTimerV2.c: 157: LATD0 = 1;
   641  00019C  808C               	bsf	3980,0,c	;volatile
   642                           
   643                           ;PWMcomTimerV2.c: 158: LATD1 = 0;
   644  00019E  928C               	bcf	3980,1,c	;volatile
   645                           
   646                           ;PWMcomTimerV2.c: 159: break;
   647  0001A0  0012               	return	
   648  0001A2                     l840:
   649                           
   650                           ;PWMcomTimerV2.c: 162: off_duty = 8;
   651  0001A2  0E00               	movlw	0
   652  0001A4  6E27               	movwf	_off_duty+1,c
   653  0001A6  0E08               	movlw	8
   654  0001A8  6E26               	movwf	_off_duty,c
   655                           
   656                           ;PWMcomTimerV2.c: 163: LATD0 = 0;
   657  0001AA  908C               	bcf	3980,0,c	;volatile
   658                           
   659                           ;PWMcomTimerV2.c: 164: LATD1 = 1;
   660  0001AC  828C               	bsf	3980,1,c	;volatile
   661                           
   662                           ;PWMcomTimerV2.c: 165: break;
   663  0001AE  0012               	return	
   664  0001B0                     l846:
   665                           
   666                           ;PWMcomTimerV2.c: 168: off_duty = 1;
   667  0001B0  0E00               	movlw	0
   668  0001B2  6E27               	movwf	_off_duty+1,c
   669  0001B4  0E01               	movlw	1
   670  0001B6  6E26               	movwf	_off_duty,c
   671                           
   672                           ;PWMcomTimerV2.c: 169: LATD0 = 1;
   673  0001B8  808C               	bsf	3980,0,c	;volatile
   674                           
   675                           ;PWMcomTimerV2.c: 170: LATD1 = 1;
   676  0001BA  828C               	bsf	3980,1,c	;volatile
   677                           
   678                           ;PWMcomTimerV2.c: 171: break;
   679  0001BC  0012               	return	
   680  0001BE                     l852:
   681                           
   682                           ;PWMcomTimerV2.c: 174: off_duty = 1;
   683  0001BE  0E00               	movlw	0
   684  0001C0  6E27               	movwf	_off_duty+1,c
   685  0001C2  0E01               	movlw	1
   686  0001C4  6E26               	movwf	_off_duty,c
   687                           
   688                           ;PWMcomTimerV2.c: 175: LATD0 = 1;
   689  0001C6  808C               	bsf	3980,0,c	;volatile
   690                           
   691                           ;PWMcomTimerV2.c: 176: LATD1 = 1;
   692  0001C8  828C               	bsf	3980,1,c	;volatile
   693                           
   694                           ;PWMcomTimerV2.c: 178: }
   695                           
   696                           ;PWMcomTimerV2.c: 177: break;
   697  0001CA  0012               	return	
   698  0001CC                     l860:
   699  0001CC  C017  F019         	movff	SetPWM@velocidade,??_SetPWM
   700  0001D0  C018  F01A         	movff	SetPWM@velocidade+1,??_SetPWM+1
   701                           
   702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   703                           ; Switch size 1, requested type "space"
   704                           ; Number of cases is 1, Range of values is 0 to 0
   705                           ; switch strategies available:
   706                           ; Name         Instructions Cycles
   707                           ; simple_byte            4     3 (average)
   708                           ;	Chosen strategy is simple_byte
   709  0001D4  501A               	movf	??_SetPWM+1,w,c
   710  0001D6  0A00               	xorlw	0	; case 0
   711  0001D8  A4D8               	btfss	status,2,c
   712  0001DA  D7F1               	goto	l852
   713                           
   714                           ; Switch size 1, requested type "space"
   715                           ; Number of cases is 3, Range of values is 1 to 3
   716                           ; switch strategies available:
   717                           ; Name         Instructions Cycles
   718                           ; simple_byte           10     6 (average)
   719                           ;	Chosen strategy is simple_byte
   720  0001DC  5019               	movf	??_SetPWM,w,c
   721  0001DE  0A01               	xorlw	1	; case 1
   722  0001E0  B4D8               	btfsc	status,2,c
   723  0001E2  D7D8               	goto	l834
   724  0001E4  0A03               	xorlw	3	; case 2
   725  0001E6  B4D8               	btfsc	status,2,c
   726  0001E8  D7DC               	goto	l840
   727  0001EA  0A01               	xorlw	1	; case 3
   728  0001EC  B4D8               	btfsc	status,2,c
   729  0001EE  D7E0               	goto	l846
   730  0001F0  D7E6               	goto	l852
   731  0001F2                     l74:
   732                           
   733                           ;PWMcomTimerV2.c: 180: else
   734                           ;PWMcomTimerV2.c: 181: {
   735                           ;PWMcomTimerV2.c: 182: PORTCbits.RC7 = 0;
   736  0001F2  9E82               	bcf	3970,7,c	;volatile
   737                           
   738                           ;PWMcomTimerV2.c: 183: T0CONbits.TMR0ON = 0;
   739  0001F4  9ED5               	bcf	4053,7,c	;volatile
   740                           
   741                           ;PWMcomTimerV2.c: 184: INTCONbits.TMR0IF = 0;
   742  0001F6  94F2               	bcf	intcon,2,c	;volatile
   743                           
   744                           ;PWMcomTimerV2.c: 185: RC6 = 0;
   745  0001F8  9C82               	bcf	3970,6,c	;volatile
   746                           
   747                           ;PWMcomTimerV2.c: 186: LATD0 = 0;
   748  0001FA  908C               	bcf	3980,0,c	;volatile
   749                           
   750                           ;PWMcomTimerV2.c: 187: LATD1 = 0;
   751  0001FC  928C               	bcf	3980,1,c	;volatile
   752                           
   753                           ;PWMcomTimerV2.c: 188: LATD2 = 0;
   754  0001FE  948C               	bcf	3980,2,c	;volatile
   755  000200  0012               	return	
   756  000202                     __end_of_SetPWM:
   757                           	opt stack 0
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           intcon	equ	0xFF2
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _Direction *****************
   770 ;; Defined at:
   771 ;;		line 193 in file "PWMcomTimerV2.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  dir             2   20[COMRAM] int 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   785 ;;      Params:         2       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0
   787 ;;      Temps:          2       0       0       0       0       0       0
   788 ;;      Totals:         4       0       0       0       0       0       0
   789 ;;Total ram usage:        4 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    2
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text4
   800  000202                     __ptext4:
   801                           	opt stack 0
   802  000202                     _Direction:
   803                           	opt stack 28
   804                           
   805                           ;PWMcomTimerV2.c: 195: switch(dir)
   806                           
   807                           ;incstack = 0
   808  000202  D024               	goto	l870
   809  000204                     l86:
   810                           
   811                           ;PWMcomTimerV2.c: 198: PORTBbits.RB2 = 1;
   812  000204  8481               	bsf	3969,2,c	;volatile
   813                           
   814                           ;PWMcomTimerV2.c: 199: PORTBbits.RB3 = 0;
   815  000206  9681               	bcf	3969,3,c	;volatile
   816                           
   817                           ;PWMcomTimerV2.c: 201: PORTBbits.RB1 = 1;
   818  000208  8281               	bsf	3969,1,c	;volatile
   819                           
   820                           ;PWMcomTimerV2.c: 202: PORTCbits.RC7 = 0;
   821  00020A  9E82               	bcf	3970,7,c	;volatile
   822                           
   823                           ;PWMcomTimerV2.c: 204: LATD4 = 0;
   824  00020C  988C               	bcf	3980,4,c	;volatile
   825                           
   826                           ;PWMcomTimerV2.c: 205: LATD5 = 0;
   827  00020E  9A8C               	bcf	3980,5,c	;volatile
   828                           
   829                           ;PWMcomTimerV2.c: 206: LATD6 = 1;
   830  000210  8C8C               	bsf	3980,6,c	;volatile
   831                           
   832                           ;PWMcomTimerV2.c: 207: LATD7 = 0;
   833  000212  9E8C               	bcf	3980,7,c	;volatile
   834                           
   835                           ;PWMcomTimerV2.c: 208: break;
   836  000214  0012               	return	
   837  000216                     l88:
   838                           
   839                           ;PWMcomTimerV2.c: 212: PORTBbits.RB2 = 0;
   840  000216  9481               	bcf	3969,2,c	;volatile
   841                           
   842                           ;PWMcomTimerV2.c: 213: PORTBbits.RB3 = 1;
   843  000218  8681               	bsf	3969,3,c	;volatile
   844                           
   845                           ;PWMcomTimerV2.c: 215: PORTBbits.RB1 = 0;
   846  00021A  9281               	bcf	3969,1,c	;volatile
   847                           
   848                           ;PWMcomTimerV2.c: 216: PORTCbits.RC7 = 1;
   849  00021C  8E82               	bsf	3970,7,c	;volatile
   850                           
   851                           ;PWMcomTimerV2.c: 218: LATD4 = 0;
   852  00021E  988C               	bcf	3980,4,c	;volatile
   853                           
   854                           ;PWMcomTimerV2.c: 219: LATD5 = 0;
   855  000220  9A8C               	bcf	3980,5,c	;volatile
   856                           
   857                           ;PWMcomTimerV2.c: 220: LATD6 = 0;
   858  000222  9C8C               	bcf	3980,6,c	;volatile
   859                           
   860                           ;PWMcomTimerV2.c: 221: LATD7 = 1;
   861  000224  8E8C               	bsf	3980,7,c	;volatile
   862                           
   863                           ;PWMcomTimerV2.c: 222: break;
   864  000226  0012               	return	
   865  000228                     l89:
   866                           
   867                           ;PWMcomTimerV2.c: 226: PORTBbits.RB2 = 1;
   868  000228  8481               	bsf	3969,2,c	;volatile
   869                           
   870                           ;PWMcomTimerV2.c: 227: PORTBbits.RB3 = 0;
   871  00022A  9681               	bcf	3969,3,c	;volatile
   872                           
   873                           ;PWMcomTimerV2.c: 229: PORTBbits.RB1 = 0;
   874  00022C  9281               	bcf	3969,1,c	;volatile
   875                           
   876                           ;PWMcomTimerV2.c: 230: PORTCbits.RC7 = 1;
   877  00022E  8E82               	bsf	3970,7,c	;volatile
   878                           
   879                           ;PWMcomTimerV2.c: 232: LATD4 = 1;
   880  000230  888C               	bsf	3980,4,c	;volatile
   881                           
   882                           ;PWMcomTimerV2.c: 233: LATD5 = 0;
   883  000232  9A8C               	bcf	3980,5,c	;volatile
   884                           
   885                           ;PWMcomTimerV2.c: 234: LATD6 = 0;
   886  000234  9C8C               	bcf	3980,6,c	;volatile
   887                           
   888                           ;PWMcomTimerV2.c: 235: LATD7 = 0;
   889  000236  9E8C               	bcf	3980,7,c	;volatile
   890                           
   891                           ;PWMcomTimerV2.c: 236: break;
   892  000238  0012               	return	
   893  00023A                     l90:
   894                           
   895                           ;PWMcomTimerV2.c: 240: PORTBbits.RB2 = 0;
   896  00023A  9481               	bcf	3969,2,c	;volatile
   897                           
   898                           ;PWMcomTimerV2.c: 241: PORTBbits.RB3 = 1;
   899  00023C  8681               	bsf	3969,3,c	;volatile
   900                           
   901                           ;PWMcomTimerV2.c: 243: PORTBbits.RB1 = 1;
   902  00023E  8281               	bsf	3969,1,c	;volatile
   903                           
   904                           ;PWMcomTimerV2.c: 244: PORTCbits.RC7 = 0;
   905  000240  9E82               	bcf	3970,7,c	;volatile
   906                           
   907                           ;PWMcomTimerV2.c: 246: LATD4 = 0;
   908  000242  988C               	bcf	3980,4,c	;volatile
   909                           
   910                           ;PWMcomTimerV2.c: 247: LATD5 = 1;
   911  000244  8A8C               	bsf	3980,5,c	;volatile
   912                           
   913                           ;PWMcomTimerV2.c: 248: LATD6 = 0;
   914  000246  9C8C               	bcf	3980,6,c	;volatile
   915                           
   916                           ;PWMcomTimerV2.c: 249: LATD7 = 0;
   917  000248  9E8C               	bcf	3980,7,c	;volatile
   918                           
   919                           ;PWMcomTimerV2.c: 251: }
   920                           
   921                           ;PWMcomTimerV2.c: 250: break;
   922  00024A  0012               	return	
   923  00024C                     l870:
   924  00024C  C015  F017         	movff	Direction@dir,??_Direction
   925  000250  C016  F018         	movff	Direction@dir+1,??_Direction+1
   926                           
   927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   928                           ; Switch size 1, requested type "space"
   929                           ; Number of cases is 1, Range of values is 0 to 0
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte            4     3 (average)
   933                           ;	Chosen strategy is simple_byte
   934  000254  5018               	movf	??_Direction+1,w,c
   935  000256  0A00               	xorlw	0	; case 0
   936  000258  A4D8               	btfss	status,2,c
   937  00025A  0012               	return	
   938                           
   939                           ; Switch size 1, requested type "space"
   940                           ; Number of cases is 4, Range of values is 0 to 3
   941                           ; switch strategies available:
   942                           ; Name         Instructions Cycles
   943                           ; simple_byte           13     7 (average)
   944                           ;	Chosen strategy is simple_byte
   945  00025C  5017               	movf	??_Direction,w,c
   946  00025E  0A00               	xorlw	0	; case 0
   947  000260  B4D8               	btfsc	status,2,c
   948  000262  D7D0               	goto	l86
   949  000264  0A01               	xorlw	1	; case 1
   950  000266  B4D8               	btfsc	status,2,c
   951  000268  D7D6               	goto	l88
   952  00026A  0A03               	xorlw	3	; case 2
   953  00026C  B4D8               	btfsc	status,2,c
   954  00026E  D7DC               	goto	l89
   955  000270  0A01               	xorlw	1	; case 3
   956  000272  A4D8               	btfss	status,2,c
   957  000274  0012               	return	
   958  000276  D7E1               	goto	l90
   959  000278                     __end_of_Direction:
   960                           	opt stack 0
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           intcon	equ	0xFF2
   966                           postinc0	equ	0xFEE
   967                           wreg	equ	0xFE8
   968                           postdec1	equ	0xFE5
   969                           fsr1l	equ	0xFE1
   970                           status	equ	0xFD8
   971                           
   972 ;; *************** function _tc_int *****************
   973 ;; Defined at:
   974 ;;		line 295 in file "PWMcomTimerV2.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   988 ;;      Params:         0       0       0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0
   990 ;;      Temps:         14       0       0       0       0       0       0
   991 ;;      Totals:        14       0       0       0       0       0       0
   992 ;;Total ram usage:       14 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    1
   995 ;; This function calls:
   996 ;;		___awmod
   997 ;; This function is called by:
   998 ;;		Interrupt level 2
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	intcode
  1003  000008                     __pintcode:
  1004                           	opt stack 0
  1005  000008                     _tc_int:
  1006                           	opt stack 28
  1007                           
  1008                           ;incstack = 0
  1009  000008  8228               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1010  00000A  CFFA F007          	movff	pclath,??_tc_int
  1011  00000E  CFFB F008          	movff	pclatu,??_tc_int+1
  1012  000012  CFE9 F009          	movff	fsr0l,??_tc_int+2
  1013  000016  CFEA F00A          	movff	fsr0h,??_tc_int+3
  1014  00001A  CFE1 F00B          	movff	fsr1l,??_tc_int+4
  1015  00001E  CFE2 F00C          	movff	fsr1h,??_tc_int+5
  1016  000022  CFD9 F00D          	movff	fsr2l,??_tc_int+6
  1017  000026  CFDA F00E          	movff	fsr2h,??_tc_int+7
  1018  00002A  CFF3 F00F          	movff	prodl,??_tc_int+8
  1019  00002E  CFF4 F010          	movff	prodh,??_tc_int+9
  1020  000032  CFF6 F011          	movff	tblptrl,??_tc_int+10
  1021  000036  CFF7 F012          	movff	tblptrh,??_tc_int+11
  1022  00003A  CFF8 F013          	movff	tblptru,??_tc_int+12
  1023  00003E  CFF5 F014          	movff	tablat,??_tc_int+13
  1024                           
  1025                           ;PWMcomTimerV2.c: 299: if(INTCONbits.TMR0IF && INTCONbits.TMR0IE)
  1026  000042  B4F2               	btfsc	intcon,2,c	;volatile
  1027  000044  AAF2               	btfss	intcon,5,c	;volatile
  1028  000046  D023               	goto	i2l104
  1029                           
  1030                           ;PWMcomTimerV2.c: 300: {
  1031                           ;PWMcomTimerV2.c: 301: INTCONbits.TMR0IF = 0;
  1032  000048  94F2               	bcf	intcon,2,c	;volatile
  1033                           
  1034                           ;PWMcomTimerV2.c: 303: if(count == off_duty)
  1035  00004A  5026               	movf	_off_duty,w,c
  1036  00004C  1820               	xorwf	_count,w,c
  1037  00004E  E106               	bnz	i2l928
  1038  000050  5027               	movf	_off_duty+1,w,c
  1039  000052  1821               	xorwf	_count+1,w,c
  1040  000054  A4D8               	btfss	status,2,c
  1041  000056  D002               	goto	i2l928
  1042                           
  1043                           ;PWMcomTimerV2.c: 304: {
  1044                           ;PWMcomTimerV2.c: 305: PORTCbits.RC6 = 1;
  1045  000058  8C82               	bsf	3970,6,c	;volatile
  1046                           
  1047                           ;PWMcomTimerV2.c: 306: LATD2 = 1;
  1048  00005A  848C               	bsf	3980,2,c	;volatile
  1049  00005C                     i2l928:
  1050                           
  1051                           ;PWMcomTimerV2.c: 307: }
  1052                           ;PWMcomTimerV2.c: 309: if(count == max_cicle)
  1053  00005C  5024               	movf	_max_cicle,w,c
  1054  00005E  1820               	xorwf	_count,w,c
  1055  000060  E106               	bnz	i2l932
  1056  000062  5025               	movf	_max_cicle+1,w,c
  1057  000064  1821               	xorwf	_count+1,w,c
  1058  000066  A4D8               	btfss	status,2,c
  1059  000068  D002               	goto	i2l932
  1060                           
  1061                           ;PWMcomTimerV2.c: 310: {
  1062                           ;PWMcomTimerV2.c: 311: PORTCbits.RC6 = 0;
  1063  00006A  9C82               	bcf	3970,6,c	;volatile
  1064                           
  1065                           ;PWMcomTimerV2.c: 312: LATD2 = 0;
  1066  00006C  948C               	bcf	3980,2,c	;volatile
  1067  00006E                     i2l932:
  1068                           
  1069                           ;PWMcomTimerV2.c: 313: }
  1070                           ;PWMcomTimerV2.c: 315: count = count%max_cicle;
  1071  00006E  C020  F001         	movff	_count,___awmod@dividend
  1072  000072  C021  F002         	movff	_count+1,___awmod@dividend+1
  1073  000076  C024  F003         	movff	_max_cicle,___awmod@divisor
  1074  00007A  C025  F004         	movff	_max_cicle+1,___awmod@divisor+1
  1075  00007E  EC3C  F001         	call	___awmod	;wreg free
  1076  000082  C001  F020         	movff	?___awmod,_count
  1077  000086  C002  F021         	movff	?___awmod+1,_count+1
  1078                           
  1079                           ;PWMcomTimerV2.c: 316: count++;
  1080  00008A  4A20               	infsnz	_count,f,c
  1081  00008C  2A21               	incf	_count+1,f,c
  1082  00008E                     i2l104:
  1083  00008E  C014  FFF5         	movff	??_tc_int+13,tablat
  1084  000092  C013  FFF8         	movff	??_tc_int+12,tblptru
  1085  000096  C012  FFF7         	movff	??_tc_int+11,tblptrh
  1086  00009A  C011  FFF6         	movff	??_tc_int+10,tblptrl
  1087  00009E  C010  FFF4         	movff	??_tc_int+9,prodh
  1088  0000A2  C00F  FFF3         	movff	??_tc_int+8,prodl
  1089  0000A6  C00E  FFDA         	movff	??_tc_int+7,fsr2h
  1090  0000AA  C00D  FFD9         	movff	??_tc_int+6,fsr2l
  1091  0000AE  C00C  FFE2         	movff	??_tc_int+5,fsr1h
  1092  0000B2  C00B  FFE1         	movff	??_tc_int+4,fsr1l
  1093  0000B6  C00A  FFEA         	movff	??_tc_int+3,fsr0h
  1094  0000BA  C009  FFE9         	movff	??_tc_int+2,fsr0l
  1095  0000BE  C008  FFFB         	movff	??_tc_int+1,pclatu
  1096  0000C2  C007  FFFA         	movff	??_tc_int,pclath
  1097  0000C6  9228               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1098  0000C8  0011               	retfie		f
  1099  0000CA                     __end_of_tc_int:
  1100                           	opt stack 0
  1101                           pclatu	equ	0xFFB
  1102                           pclath	equ	0xFFA
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           prodh	equ	0xFF4
  1108                           prodl	equ	0xFF3
  1109                           intcon	equ	0xFF2
  1110                           postinc0	equ	0xFEE
  1111                           fsr0h	equ	0xFEA
  1112                           fsr0l	equ	0xFE9
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1h	equ	0xFE2
  1116                           fsr1l	equ	0xFE1
  1117                           fsr2h	equ	0xFDA
  1118                           fsr2l	equ	0xFD9
  1119                           status	equ	0xFD8
  1120                           
  1121 ;; *************** function ___awmod *****************
  1122 ;; Defined at:
  1123 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awmod.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  dividend        2    0[COMRAM] int 
  1126 ;;  divisor         2    2[COMRAM] int 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  sign            1    5[COMRAM] unsigned char 
  1129 ;;  counter         1    4[COMRAM] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    0[COMRAM] int 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1139 ;;      Params:         4       0       0       0       0       0       0
  1140 ;;      Locals:         2       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0
  1142 ;;      Totals:         6       0       0       0       0       0       0
  1143 ;;Total ram usage:        6 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_tc_int
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text6
  1153  000278                     __ptext6:
  1154                           	opt stack 0
  1155  000278                     ___awmod:
  1156                           	opt stack 28
  1157                           
  1158                           ;incstack = 0
  1159  000278  0E00               	movlw	0
  1160  00027A  6E06               	movwf	___awmod@sign,c
  1161  00027C  AE02               	btfss	___awmod@dividend+1,7,c
  1162  00027E  D006               	goto	i2l884
  1163  000280  6C01               	negf	___awmod@dividend,c
  1164  000282  1E02               	comf	___awmod@dividend+1,f,c
  1165  000284  B0D8               	btfsc	status,0,c
  1166  000286  2A02               	incf	___awmod@dividend+1,f,c
  1167  000288  0E01               	movlw	1
  1168  00028A  6E06               	movwf	___awmod@sign,c
  1169  00028C                     i2l884:
  1170  00028C  AE04               	btfss	___awmod@divisor+1,7,c
  1171  00028E  D004               	goto	i2l888
  1172  000290  6C03               	negf	___awmod@divisor,c
  1173  000292  1E04               	comf	___awmod@divisor+1,f,c
  1174  000294  B0D8               	btfsc	status,0,c
  1175  000296  2A04               	incf	___awmod@divisor+1,f,c
  1176  000298                     i2l888:
  1177  000298  5003               	movf	___awmod@divisor,w,c
  1178  00029A  1004               	iorwf	___awmod@divisor+1,w,c
  1179  00029C  B4D8               	btfsc	status,2,c
  1180  00029E  D018               	goto	i2l904
  1181  0002A0  0E01               	movlw	1
  1182  0002A2  6E05               	movwf	___awmod@counter,c
  1183  0002A4  D004               	goto	i2l894
  1184  0002A6                     i2l892:
  1185  0002A6  90D8               	bcf	status,0,c
  1186  0002A8  3603               	rlcf	___awmod@divisor,f,c
  1187  0002AA  3604               	rlcf	___awmod@divisor+1,f,c
  1188  0002AC  2A05               	incf	___awmod@counter,f,c
  1189  0002AE                     i2l894:
  1190  0002AE  AE04               	btfss	___awmod@divisor+1,7,c
  1191  0002B0  D7FA               	goto	i2l892
  1192  0002B2                     i2l896:
  1193  0002B2  5003               	movf	___awmod@divisor,w,c
  1194  0002B4  5C01               	subwf	___awmod@dividend,w,c
  1195  0002B6  5004               	movf	___awmod@divisor+1,w,c
  1196  0002B8  5802               	subwfb	___awmod@dividend+1,w,c
  1197  0002BA  A0D8               	btfss	status,0,c
  1198  0002BC  D004               	goto	i2l900
  1199  0002BE  5003               	movf	___awmod@divisor,w,c
  1200  0002C0  5E01               	subwf	___awmod@dividend,f,c
  1201  0002C2  5004               	movf	___awmod@divisor+1,w,c
  1202  0002C4  5A02               	subwfb	___awmod@dividend+1,f,c
  1203  0002C6                     i2l900:
  1204  0002C6  90D8               	bcf	status,0,c
  1205  0002C8  3204               	rrcf	___awmod@divisor+1,f,c
  1206  0002CA  3203               	rrcf	___awmod@divisor,f,c
  1207  0002CC  2E05               	decfsz	___awmod@counter,f,c
  1208  0002CE  D7F1               	goto	i2l896
  1209  0002D0                     i2l904:
  1210  0002D0  5006               	movf	___awmod@sign,w,c
  1211  0002D2  B4D8               	btfsc	status,2,c
  1212  0002D4  D004               	goto	i2l908
  1213  0002D6  6C01               	negf	___awmod@dividend,c
  1214  0002D8  1E02               	comf	___awmod@dividend+1,f,c
  1215  0002DA  B0D8               	btfsc	status,0,c
  1216  0002DC  2A02               	incf	___awmod@dividend+1,f,c
  1217  0002DE                     i2l908:
  1218  0002DE  C001  F001         	movff	___awmod@dividend,?___awmod
  1219  0002E2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1220  0002E6  0012               	return	
  1221  0002E8                     __end_of___awmod:
  1222                           	opt stack 0
  1223  0000                     pclatu	equ	0xFFB
  1224                           pclath	equ	0xFFA
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           prodh	equ	0xFF4
  1230                           prodl	equ	0xFF3
  1231                           intcon	equ	0xFF2
  1232                           postinc0	equ	0xFEE
  1233                           fsr0h	equ	0xFEA
  1234                           fsr0l	equ	0xFE9
  1235                           wreg	equ	0xFE8
  1236                           postdec1	equ	0xFE5
  1237                           fsr1h	equ	0xFE2
  1238                           fsr1l	equ	0xFE1
  1239                           fsr2h	equ	0xFDA
  1240                           fsr2l	equ	0xFD9
  1241                           status	equ	0xFD8
  1242                           pclatu	equ	0xFFB
  1243                           pclath	equ	0xFFA
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           prodh	equ	0xFF4
  1249                           prodl	equ	0xFF3
  1250                           intcon	equ	0xFF2
  1251                           postinc0	equ	0xFEE
  1252                           fsr0h	equ	0xFEA
  1253                           fsr0l	equ	0xFE9
  1254                           wreg	equ	0xFE8
  1255                           postdec1	equ	0xFE5
  1256                           fsr1h	equ	0xFE2
  1257                           fsr1l	equ	0xFE1
  1258                           fsr2h	equ	0xFDA
  1259                           fsr2l	equ	0xFD9
  1260                           status	equ	0xFD8
  1261                           
  1262                           	psect	rparam
  1263  0000                     pclatu	equ	0xFFB
  1264                           pclath	equ	0xFFA
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           prodh	equ	0xFF4
  1270                           prodl	equ	0xFF3
  1271                           intcon	equ	0xFF2
  1272                           postinc0	equ	0xFEE
  1273                           fsr0h	equ	0xFEA
  1274                           fsr0l	equ	0xFE9
  1275                           wreg	equ	0xFE8
  1276                           postdec1	equ	0xFE5
  1277                           fsr1h	equ	0xFE2
  1278                           fsr1l	equ	0xFE1
  1279                           fsr2h	equ	0xFDA
  1280                           fsr2l	equ	0xFD9
  1281                           status	equ	0xFD8
  1282                           
  1283                           	psect	temp
  1284  000028                     btemp:
  1285                           	opt stack 0
  1286  000028                     	ds	1
  1287  0000                     int$flags	set	btemp
  1288                           pclatu	equ	0xFFB
  1289                           pclath	equ	0xFFA
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           prodh	equ	0xFF4
  1295                           prodl	equ	0xFF3
  1296                           intcon	equ	0xFF2
  1297                           postinc0	equ	0xFEE
  1298                           fsr0h	equ	0xFEA
  1299                           fsr0l	equ	0xFE9
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           fsr2h	equ	0xFDA
  1305                           fsr2l	equ	0xFD9
  1306                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SetPWM

Critical Paths under _tc_int in COMRAM

    _tc_int->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5     800
                                             26 COMRAM     5     0      5
                          _Direction
                             _SetPWM
                             _delayX
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayX                                               5     3      2     218
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SetPWM                                               6     2      4     388
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Direction                                            4     2      2     194
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tc_int                                              14    14      0     382
                                              6 COMRAM    14    14      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     382
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Direction
   _SetPWM
   _delayX
   _setup

 _tc_int (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1F      27       1       41.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      15        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Sep 10 06:18:11 2016

                     l90 023A                       l74 01F2                       l68 033E  
                     l86 0204                       l88 0216                       l89 0228  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l840 01A2                      l834 0194  
                    l826 0328                      l914 00D2                      l852 01BE  
                    l860 01CC                      l870 024C                      l846 01B0  
           __CFG_CPB$OFF 000000                      _RC6 007C16             __CFG_CPD$OFF 000000  
                    u277 032E             __CFG_BORV$18 000000             ___awmod@sign 0006  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     _main 00CE  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0028                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 00CA            __CFG_IESO$OFF 000000  
           ___param_bank 000010                    ?_main 001B          __end_of___awmod 02E8  
                  _LATD0 007C60                    _LATD1 007C61                    _LATD2 007C62  
                  _LATD4 007C64                    _LATD5 007C65                    _LATD6 007C66  
                  _LATD7 007C67                    i2l104 008E                    i2l900 02C6  
                  i2l904 02D0                    i2l908 02DE                    i2l932 006E  
                  i2l928 005C                    i2l892 02A6                    i2l884 028C  
                  i2l894 02AE                    i2l896 02B2                    i2l888 0298  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _count 0020  
                  _setup 0354                    tablat 000FF5                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 02E8             __end_of_main 0188  
                 ??_main 0020            __activetblptr 000002       __size_of_Direction 0076  
                 ?_setup 0001           __CFG_WDTEN$OFF 000000                   _TRISB1 007C99  
                 _TRISB2 007C9A                   _TRISB3 007C9B                   _TRISD0 007CA8  
                 _TRISD1 007CA9                   _TRISD2 007CAA                   _TRISD3 007CAB  
                 _TRISC5 007CA5                   _TRISD4 007CAC                   _TRISC6 007CA6  
                 _TRISD5 007CAD                   _TRISC7 007CA7                   _TRISD6 007CAE  
                 _TRISD7 007CAF                   _SetPWM 0188           __CFG_XINST$OFF 000000  
              ??___awmod 0005                   _delayX 031E                   _tc_int 0008  
        ___awmod@divisor 0003          ___awmod@counter 0005             __pdataCOMRAM 0024  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 0310  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001        __end_of_Direction 0278  
         __pcstackCOMRAM 0001            __end_of_setup 0388                  ??_setup 0015  
                ?_SetPWM 0015         SetPWM@velocidade 0017                  ?_delayX 0015  
                ?_tc_int 0001                  __Hparam 0000                  __Lparam 0000  
        __size_of_SetPWM 007A                  ___awmod 0278          __size_of_delayX 0036  
        __CFG_STVREN$OFF 000000                  __pcinit 02E8                  __ramtop 0600  
        __size_of_tc_int 00C2                  __ptext0 00CE                  __ptext1 0354  
                __ptext2 031E                  __ptext3 0188                  __ptext4 0202  
                __ptext6 0278                _T0CONbits 000FD5                  delayX@i 0018  
                delayX@n 0015         ___awmod@dividend 0001     end_of_initialization 0310  
          __Lmediumconst 0000                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81                _PORTCbits 000F82               _velocidade 0022  
         __end_of_SetPWM 0202                _Direction 0202           __end_of_delayX 0354  
          __pidataCOMRAM 0388           __end_of_tc_int 00CA      start_initialization 02E8  
               ??_SetPWM 0019                 ??_delayX 0017               ?_Direction 0015  
       __CFG_LPT1OSC$OFF 000000                 ??_tc_int 0007              __pbssCOMRAM 0020  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___awmod 0001  
              _max_cicle 0024           __size_of_setup 0034         __CFG_WDTPS$32768 000000  
            ??_Direction 0017                 SetPWM@on 0015                copy_data0 02FC  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___awmod 0070             Direction@dir 0015                 _off_duty 0026  
          __size_of_main 00BA                 int$flags 0028                 main@argc 001B  
               main@argv 001D               _INTCONbits 000FF2                 intlevel2 0000  
      __CFG_FOSC$INTIO67 000000  
